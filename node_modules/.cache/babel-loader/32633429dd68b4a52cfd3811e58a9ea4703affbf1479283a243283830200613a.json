{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nvar PDFAcroText = /** @class */function (_super) {\n  __extends(PDFAcroText, _super);\n  function PDFAcroText() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroText.prototype.MaxLen = function () {\n    var maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n    if (maxLen instanceof PDFNumber) return maxLen;\n    return undefined;\n  };\n  PDFAcroText.prototype.Q = function () {\n    var q = this.dict.lookup(PDFName.of('Q'));\n    if (q instanceof PDFNumber) return q;\n    return undefined;\n  };\n  PDFAcroText.prototype.setMaxLength = function (maxLength) {\n    this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n  };\n  PDFAcroText.prototype.removeMaxLength = function () {\n    this.dict.delete(PDFName.of('MaxLen'));\n  };\n  PDFAcroText.prototype.getMaxLength = function () {\n    var _a;\n    return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setQuadding = function (quadding) {\n    this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n  };\n  PDFAcroText.prototype.getQuadding = function () {\n    var _a;\n    return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setValue = function (value) {\n    this.dict.set(PDFName.of('V'), value);\n    // const widgets = this.getWidgets();\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n    //   const widget = widgets[idx];\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n    //   widget.setAppearanceState(state);\n    // }\n  };\n\n  PDFAcroText.prototype.removeValue = function () {\n    this.dict.delete(PDFName.of('V'));\n  };\n  PDFAcroText.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFString || v instanceof PDFHexString) return v;\n    return undefined;\n  };\n  PDFAcroText.fromDict = function (dict, ref) {\n    return new PDFAcroText(dict, ref);\n  };\n  PDFAcroText.create = function (context) {\n    var dict = context.obj({\n      FT: 'Tx',\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroText(dict, ref);\n  };\n  return PDFAcroText;\n}(PDFAcroTerminal);\nexport default PDFAcroText;","map":{"version":3,"names":["PDFNumber","PDFString","PDFHexString","PDFName","PDFAcroTerminal","PDFAcroText","_super","__extends","prototype","MaxLen","maxLen","dict","lookup","of","undefined","Q","q","setMaxLength","maxLength","set","removeMaxLength","delete","getMaxLength","_a","asNumber","setQuadding","quadding","getQuadding","setValue","value","removeValue","getValue","v","V","fromDict","ref","create","context","obj","FT","Kids","register"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0 - Copy (2)\\node_modules\\pdf-lib\\src\\core\\acroform\\PDFAcroText.ts"],"sourcesContent":["import PDFContext from 'src/core/PDFContext';\r\nimport PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFNumber from 'src/core/objects/PDFNumber';\r\nimport PDFString from 'src/core/objects/PDFString';\r\nimport PDFHexString from 'src/core/objects/PDFHexString';\r\nimport PDFName from 'src/core/objects/PDFName';\r\nimport PDFRef from 'src/core/objects/PDFRef';\r\nimport PDFAcroTerminal from 'src/core/acroform/PDFAcroTerminal';\r\n\r\nclass PDFAcroText extends PDFAcroTerminal {\r\n  static fromDict = (dict: PDFDict, ref: PDFRef) => new PDFAcroText(dict, ref);\r\n\r\n  static create = (context: PDFContext) => {\r\n    const dict = context.obj({\r\n      FT: 'Tx',\r\n      Kids: [],\r\n    });\r\n    const ref = context.register(dict);\r\n    return new PDFAcroText(dict, ref);\r\n  };\r\n\r\n  MaxLen(): PDFNumber | undefined {\r\n    const maxLen = this.dict.lookup(PDFName.of('MaxLen'));\r\n    if (maxLen instanceof PDFNumber) return maxLen;\r\n    return undefined;\r\n  }\r\n\r\n  Q(): PDFNumber | undefined {\r\n    const q = this.dict.lookup(PDFName.of('Q'));\r\n    if (q instanceof PDFNumber) return q;\r\n    return undefined;\r\n  }\r\n\r\n  setMaxLength(maxLength: number) {\r\n    this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\r\n  }\r\n\r\n  removeMaxLength() {\r\n    this.dict.delete(PDFName.of('MaxLen'));\r\n  }\r\n\r\n  getMaxLength(): number | undefined {\r\n    return this.MaxLen()?.asNumber();\r\n  }\r\n\r\n  setQuadding(quadding: 0 | 1 | 2) {\r\n    this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\r\n  }\r\n\r\n  getQuadding(): number | undefined {\r\n    return this.Q()?.asNumber();\r\n  }\r\n\r\n  setValue(value: PDFHexString | PDFString) {\r\n    this.dict.set(PDFName.of('V'), value);\r\n\r\n    // const widgets = this.getWidgets();\r\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\r\n    //   const widget = widgets[idx];\r\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\r\n    //   widget.setAppearanceState(state);\r\n    // }\r\n  }\r\n\r\n  removeValue() {\r\n    this.dict.delete(PDFName.of('V'));\r\n  }\r\n\r\n  getValue(): PDFString | PDFHexString | undefined {\r\n    const v = this.V();\r\n    if (v instanceof PDFString || v instanceof PDFHexString) return v;\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default PDFAcroText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
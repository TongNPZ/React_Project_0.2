{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TongNPZ\\\\Desktop\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Login.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!username || !password) {\n      alert('Please enter both username and password.');\n      return;\n    }\n    const loginData = {\n      username,\n      password\n    };\n    axios.post(\"http://26.90.237.200:3000/login\", loginData).then(response => {\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      console.log(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n    axios.post('http://26.90.237.200:3000/authen', loginData, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response.data);\n      if (response.data.decoded.statusAuthen === 1) {\n        alert('Authen success');\n        navigate('/Housing');\n      } else {\n        alert('Authen failed');\n      }\n    }).catch(error => {\n      alert('Authen failed');\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"EgYjDAoSBrLcIIdUzvjslMz3nCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","props","_s","navigate","token","localStorage","getItem","username","setUsername","password","setPassword","handleLogout","removeItem","handleSubmit","e","preventDefault","alert","loginData","post","then","response","data","setItem","console","log","catch","error","headers","decoded","statusAuthen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TongNPZ/Desktop/my-app/src/components/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem('token');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogout = () =>  {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!username || !password) {\r\n      alert('Please enter both username and password.');\r\n      return;\r\n    }\r\n\r\n    const loginData = { username, password };\r\n\r\n    axios.post(\"http://26.90.237.200:3000/login\", loginData)\r\n      .then(response => {\r\n        const token = response.data.token;\r\n        localStorage.setItem('token', token);\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n\r\n    axios.post('http://26.90.237.200:3000/authen', loginData, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.decoded.statusAuthen === 1) {\r\n          alert('Authen success');\r\n          navigate('/Housing');\r\n        } else {\r\n          alert('Authen failed');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Authen failed');\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,YAAY,GAAGA,CAAA,KAAO;IAC1BN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCT,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMU,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,QAAQ,IAAI,CAACE,QAAQ,EAAE;MAC1BO,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IAEA,MAAMC,SAAS,GAAG;MAAEV,QAAQ;MAAEE;IAAS,CAAC;IAExCb,KAAK,CAACsB,IAAI,CAAC,iCAAiC,EAAED,SAAS,CAAC,CACrDE,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMhB,KAAK,GAAGgB,QAAQ,CAACC,IAAI,CAACjB,KAAK;MACjCC,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAElB,KAAK,CAAC;MACpCmB,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IAEJ9B,KAAK,CAACsB,IAAI,CAAC,kCAAkC,EAAED,SAAS,EAAE;MACxDU,OAAO,EAAE;QACP,eAAe,EAAG,UAASvB,KAAM,EAAC;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCe,IAAI,CAACC,QAAQ,IAAI;MAChBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAID,QAAQ,CAACC,IAAI,CAACO,OAAO,CAACC,YAAY,KAAK,CAAC,EAAE;QAC5Cb,KAAK,CAAC,gBAAgB,CAAC;QACvBb,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM;QACLa,KAAK,CAAC,eAAe,CAAC;MACxB;IACF,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACdV,KAAK,CAAC,eAAe,CAAC;MACtBO,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,oBACE3B,OAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAzDIF,KAAK;EAAA,QACQH,WAAW;AAAA;AAAAqC,EAAA,GADxBlC,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import pako from 'pako';\nvar UPNG = {};\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n    h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n    img = new Uint8Array(len),\n    empty = new Uint8Array(len),\n    prev = new Uint8Array(len);\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n      fy = frm.rect.y,\n      fw = frm.rect.width,\n      fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (var j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 0) {} else if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) img[j] = prev[j];\n  }\n  return frms;\n};\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n    bpp = UPNG.decode._getBPP(out);\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n    bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n    depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n\n  //console.log(ctype, depth);\n  var time = Date.now();\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n    if (depth == 8) for (var i = 0; i < qarea; i += 4) {\n      bf[i] = data[i];\n      bf[i + 1] = data[i + 1];\n      bf[i + 2] = data[i + 2];\n      bf[i + 3] = data[i + 3];\n    }\n    if (depth == 16) for (var i = 0; i < qarea; i++) {\n      bf[i] = data[i << 1];\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs[\"tRNS\"];\n    if (ts == null) {\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n      }\n    } else {\n      var tr = ts[0],\n        tg = ts[1],\n        tb = ts[2];\n      if (depth == 8) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n      }\n      if (depth == 16) for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs[\"PLTE\"],\n      ap = out.tabs[\"tRNS\"],\n      tl = ap ? ap.length : 0;\n    //console.log(p, ap);\n    if (depth == 1) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 2) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 4) for (var y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (var i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        j = data[i],\n        cj = 3 * j;\n      bf[qi] = p[cj];\n      bf[qi + 1] = p[cj + 1];\n      bf[qi + 2] = p[cj + 2];\n      bf[qi + 3] = j < tl ? ap[j] : 255;\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 1,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 1];\n    }\n    if (depth == 16) for (var i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 2,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 2];\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs[\"tRNS\"] ? out.tabs[\"tRNS\"] : -1;\n    for (var y = 0; y < h; y++) {\n      var off = y * bpl,\n        to = y * w;\n      if (depth == 1) for (var x = 0; x < w; x++) {\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n          al = gr == tr * 255 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 2) for (var x = 0; x < w; x++) {\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n          al = gr == tr * 85 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 4) for (var x = 0; x < w; x++) {\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n          al = gr == tr * 17 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 8) for (var x = 0; x < w; x++) {\n        var gr = data[off + x],\n          al = gr == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 16) for (var x = 0; x < w; x++) {\n        var gr = data[off + (x << 1)],\n          al = rs(data, off + (x << i)) == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      }\n    }\n  }\n  //console.log(Date.now()-time);\n  return bf;\n};\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n    offset = 8,\n    bin = UPNG._bin,\n    rUs = bin.readUshort,\n    rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n    doff = 0; // put all IDAT data into it\n  var fd,\n    foff = 0; // frames\n\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n  for (var i = 0; i < 8; i++) if (data[i] != mgck[i]) throw \"The input is not a PNG file!\";\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4;\n    //console.log(type,len);\n\n    if (type == \"IHDR\") {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == \"IDAT\") {\n      for (var i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n      doff += len;\n    } else if (type == \"acTL\") {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == \"fcTL\") {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      };\n      //console.log(frm);\n      out.frames.push(frm);\n    } else if (type == \"fdAT\") {\n      for (var i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n      foff += len - 4;\n    } else if (type == \"pHYs\") {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == \"cHRM\") {\n      out.tabs[type] = [];\n      for (var i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == \"tEXt\") {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      var keyw = bin.readASCII(data, offset, nz - offset);\n      var text = bin.readASCII(data, nz + 1, offset + len - nz - 1);\n      out.tabs[type][keyw] = text;\n    } else if (type == \"iTXt\") {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n        off = offset;\n      nz = bin.nextZero(data, off);\n      var keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off],\n        cmeth = data[off + 1];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      var ltag = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      var tkeyw = bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var text = bin.readUTF8(data, off, len - (off - offset));\n      out.tabs[type][keyw] = text;\n    } else if (type == \"PLTE\") {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == \"hIST\") {\n      var pl = out.tabs[\"PLTE\"].length / 3;\n      out.tabs[type] = [];\n      for (var i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == \"tRNS\") {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];\n      //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == \"gAMA\") out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == \"sRGB\") out.tabs[type] = data[offset];else if (type == \"bKGD\") {\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\n    } else if (type == \"IEND\") {\n      break;\n    }\n    //else {  log(\"unknown chunk type\", type, len);  }\n    offset += len;\n    var crc = bin.readUint(data, offset);\n    offset += 4;\n  }\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n    foff = 0;\n  }\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var time = Date.now();\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n  dd = UPNG.decode._inflate(dd, buff);\n  //console.log(dd.length, buff.length);\n  //console.log(Date.now()-time);\n\n  var time = Date.now();\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  //console.log(Date.now()-time);\n  return dd;\n};\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG[\"inflateRaw\"](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n      i = 0,\n      m = 0,\n      J = 0,\n      h = 0,\n      Q = 0,\n      X = 0,\n      u = 0,\n      w = 0,\n      d = 0,\n      v,\n      C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n      n = V.b,\n      A = V.e,\n      l = V.R,\n      M = V.n,\n      I = V.A,\n      e = V.Z,\n      b = V.m,\n      Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 3);\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n          q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n      if (Z) W = H.H.W(W, w + (1 << 17));\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var E = d,\n          j = 1;\n        for (var c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n        for (var c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n            Y = b.c[s],\n            a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n          w = z;\n        }\n      }\n    }\n    return W.length == w ? W : W.slice(0, w);\n  };\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n      M = H.H.Z,\n      I = 0;\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n          m = 0;\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n        var J = I + m;\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n    return n;\n  };\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n      A = 0,\n      l = V.length >>> 1;\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n    return n;\n  };\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n      V = N.length,\n      n,\n      A,\n      l,\n      M,\n      I,\n      e = R.j;\n    for (var M = 0; M <= W; M++) e[M] = 0;\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n      n = H.H.m,\n      A = n.r;\n    for (var l = 0; l < V; l += 2) if (N[l + 1] != 0) {\n      var M = l >> 1,\n        I = N[l + 1],\n        e = M << 4 | I,\n        b = W - I,\n        Z = N[l] << b,\n        m = Z + (1 << b);\n      while (Z != m) {\n        var J = A[Z] >>> 15 - W;\n        R[J] = e;\n        Z++;\n      }\n    }\n  };\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n      V = 15 - W;\n    for (var n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n  H.H.m = function () {\n    var N = Uint16Array,\n      W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n  (function () {\n    var N = H.H.m,\n      W = 1 << 15;\n    for (var R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n    for (var R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n  return H.H.N;\n}();\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n    h = out.height;\n  var bpp = UPNG.decode._getBPP(out),\n    cbpp = bpp >> 3,\n    bpl = Math.ceil(w * bpp / 8);\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n  while (pass < 7) {\n    var ri = row_increment[pass],\n      ci = col_increment[pass];\n    var sw = 0,\n      sh = 0;\n    var cr = starting_row[pass];\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n    var cc = starting_col[pass];\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n    var bpll = Math.ceil(sw * bpp / 8);\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n    var y = 0,\n      row = starting_row[pass];\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n      while (col < w) {\n        if (bpp == 1) {\n          var val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n        if (bpp == 2) {\n          var val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n        if (bpp == 4) {\n          var val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n          for (var j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n        cdi += bpp;\n        col += ci;\n      }\n      y++;\n      row += ri;\n    }\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n  return img;\n};\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    paeth = UPNG.decode._paeth;\n  bpp = Math.ceil(bpp / 8);\n  var i = 0,\n    di = 1,\n    type = data[off],\n    x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n  for (var y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) for (; x < bpl; x++) data[i + x] = data[di + x];else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n    }\n  }\n  return data;\n};\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n    pa = p - a,\n    pb = p - b,\n    pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = \"\";\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? \"0\" + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = \"\",\n      ns;\n    for (var i = 0; i < l; i++) s += \"%\" + UPNG._bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n    return ns;\n  }\n};\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n    h = Math.min(sh, th);\n  var si = 0,\n    ti = 0;\n  for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\n    if (xoff >= 0 && yoff >= 0) {\n      si = y * sw + x << 2;\n      ti = (yoff + y) * tw + xoff + x << 2;\n    } else {\n      si = (-yoff + y) * sw - xoff + x << 2;\n      ti = y * tw + x << 2;\n    }\n    if (mode == 0) {\n      tb[ti] = sb[si];\n      tb[ti + 1] = sb[si + 1];\n      tb[ti + 2] = sb[si + 2];\n      tb[ti + 3] = sb[si + 3];\n    } else if (mode == 1) {\n      var fa = sb[si + 3] * (1 / 255),\n        fr = sb[si] * fa,\n        fg = sb[si + 1] * fa,\n        fb = sb[si + 2] * fa;\n      var ba = tb[ti + 3] * (1 / 255),\n        br = tb[ti] * ba,\n        bg = tb[ti + 1] * ba,\n        bb = tb[ti + 2] * ba;\n      var ifa = 1 - fa,\n        oa = fa + ba * ifa,\n        ioa = oa == 0 ? 0 : 1 / oa;\n      tb[ti + 3] = 255 * oa;\n      tb[ti + 0] = (fr + br * ifa) * ioa;\n      tb[ti + 1] = (fg + bg * ifa) * ioa;\n      tb[ti + 2] = (fb + bb * ifa) * ioa;\n    } else if (mode == 2) {\n      // copy only differences, otherwise zero\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) {\n        tb[ti] = 0;\n        tb[ti + 1] = 0;\n        tb[ti + 2] = 0;\n        tb[ti + 3] = 0;\n      } else {\n        tb[ti] = fr;\n        tb[ti + 1] = fg;\n        tb[ti + 2] = fb;\n        tb[ti + 3] = fa;\n      }\n    } else if (mode == 3) {\n      // check if can be blended\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) continue;\n      //if(fa!=255 && ba!=0) return false;\n      if (fa < 220 && ba > 20) return false;\n    }\n  }\n  return true;\n};\nUPNG.encode = function (bufs, w, h, ps, dels, tabs, forbidPlte) {\n  if (ps == null) ps = 0;\n  if (forbidPlte == null) forbidPlte = false;\n  var nimg = UPNG.encode.compress(bufs, w, h, ps, [false, false, false, 0, forbidPlte]);\n  UPNG.encode.compressPNG(nimg, -1);\n  return UPNG.encode._main(nimg, w, h, dels, tabs);\n};\nUPNG.encodeLL = function (bufs, w, h, cc, ac, depth, dels, tabs) {\n  var nimg = {\n    ctype: 0 + (cc == 1 ? 0 : 2) + (ac == 0 ? 0 : 4),\n    depth: depth,\n    frames: []\n  };\n  var time = Date.now();\n  var bipp = (cc + ac) * depth,\n    bipl = bipp * w;\n  for (var i = 0; i < bufs.length; i++) nimg.frames.push({\n    rect: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h\n    },\n    img: new Uint8Array(bufs[i]),\n    blend: 0,\n    dispose: 1,\n    bpp: Math.ceil(bipp / 8),\n    bpl: Math.ceil(bipl / 8)\n  });\n  UPNG.encode.compressPNG(nimg, 0, true);\n  var out = UPNG.encode._main(nimg, w, h, dels, tabs);\n  return out;\n};\nUPNG.encode._main = function (nimg, w, h, dels, tabs) {\n  if (tabs == null) tabs = {};\n  var crc = UPNG.crc.crc,\n    wUi = UPNG._bin.writeUint,\n    wUs = UPNG._bin.writeUshort,\n    wAs = UPNG._bin.writeASCII;\n  var offset = 8,\n    anim = nimg.frames.length > 1,\n    pltAlpha = false;\n  var leng = 8 + (16 + 5 + 4) /*+ (9+4)*/ + (anim ? 20 : 0);\n  if (tabs[\"sRGB\"] != null) leng += 8 + 1 + 4;\n  if (tabs[\"pHYs\"] != null) leng += 8 + 9 + 4;\n  if (nimg.ctype == 3) {\n    var dl = nimg.plte.length;\n    for (var i = 0; i < dl; i++) if (nimg.plte[i] >>> 24 != 255) pltAlpha = true;\n    leng += 8 + dl * 3 + 4 + (pltAlpha ? 8 + dl * 1 + 4 : 0);\n  }\n  for (var j = 0; j < nimg.frames.length; j++) {\n    var fr = nimg.frames[j];\n    if (anim) leng += 38;\n    leng += fr.cimg.length + 12;\n    if (j != 0) leng += 4;\n  }\n  leng += 12;\n  var data = new Uint8Array(leng);\n  var wr = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n  for (var i = 0; i < 8; i++) data[i] = wr[i];\n  wUi(data, offset, 13);\n  offset += 4;\n  wAs(data, offset, \"IHDR\");\n  offset += 4;\n  wUi(data, offset, w);\n  offset += 4;\n  wUi(data, offset, h);\n  offset += 4;\n  data[offset] = nimg.depth;\n  offset++; // depth\n  data[offset] = nimg.ctype;\n  offset++; // ctype\n  data[offset] = 0;\n  offset++; // compress\n  data[offset] = 0;\n  offset++; // filter\n  data[offset] = 0;\n  offset++; // interlace\n  wUi(data, offset, crc(data, offset - 17, 17));\n  offset += 4; // crc\n\n  // 13 bytes to say, that it is sRGB\n  if (tabs[\"sRGB\"] != null) {\n    wUi(data, offset, 1);\n    offset += 4;\n    wAs(data, offset, \"sRGB\");\n    offset += 4;\n    data[offset] = tabs[\"sRGB\"];\n    offset++;\n    wUi(data, offset, crc(data, offset - 5, 5));\n    offset += 4; // crc\n  }\n\n  if (tabs[\"pHYs\"] != null) {\n    wUi(data, offset, 9);\n    offset += 4;\n    wAs(data, offset, \"pHYs\");\n    offset += 4;\n    wUi(data, offset, tabs[\"pHYs\"][0]);\n    offset += 4;\n    wUi(data, offset, tabs[\"pHYs\"][1]);\n    offset += 4;\n    data[offset] = tabs[\"pHYs\"][2];\n    offset++;\n    wUi(data, offset, crc(data, offset - 13, 13));\n    offset += 4; // crc\n  }\n\n  if (anim) {\n    wUi(data, offset, 8);\n    offset += 4;\n    wAs(data, offset, \"acTL\");\n    offset += 4;\n    wUi(data, offset, nimg.frames.length);\n    offset += 4;\n    wUi(data, offset, tabs[\"loop\"] != null ? tabs[\"loop\"] : 0);\n    offset += 4;\n    wUi(data, offset, crc(data, offset - 12, 12));\n    offset += 4; // crc\n  }\n\n  if (nimg.ctype == 3) {\n    var dl = nimg.plte.length;\n    wUi(data, offset, dl * 3);\n    offset += 4;\n    wAs(data, offset, \"PLTE\");\n    offset += 4;\n    for (var i = 0; i < dl; i++) {\n      var ti = i * 3,\n        c = nimg.plte[i],\n        r = c & 255,\n        g = c >>> 8 & 255,\n        b = c >>> 16 & 255;\n      data[offset + ti + 0] = r;\n      data[offset + ti + 1] = g;\n      data[offset + ti + 2] = b;\n    }\n    offset += dl * 3;\n    wUi(data, offset, crc(data, offset - dl * 3 - 4, dl * 3 + 4));\n    offset += 4; // crc\n\n    if (pltAlpha) {\n      wUi(data, offset, dl);\n      offset += 4;\n      wAs(data, offset, \"tRNS\");\n      offset += 4;\n      for (var i = 0; i < dl; i++) data[offset + i] = nimg.plte[i] >>> 24 & 255;\n      offset += dl;\n      wUi(data, offset, crc(data, offset - dl - 4, dl + 4));\n      offset += 4; // crc\n    }\n  }\n\n  var fi = 0;\n  for (var j = 0; j < nimg.frames.length; j++) {\n    var fr = nimg.frames[j];\n    if (anim) {\n      wUi(data, offset, 26);\n      offset += 4;\n      wAs(data, offset, \"fcTL\");\n      offset += 4;\n      wUi(data, offset, fi++);\n      offset += 4;\n      wUi(data, offset, fr.rect.width);\n      offset += 4;\n      wUi(data, offset, fr.rect.height);\n      offset += 4;\n      wUi(data, offset, fr.rect.x);\n      offset += 4;\n      wUi(data, offset, fr.rect.y);\n      offset += 4;\n      wUs(data, offset, dels[j]);\n      offset += 2;\n      wUs(data, offset, 1000);\n      offset += 2;\n      data[offset] = fr.dispose;\n      offset++; // dispose\n      data[offset] = fr.blend;\n      offset++; // blend\n      wUi(data, offset, crc(data, offset - 30, 30));\n      offset += 4; // crc\n    }\n\n    var imgd = fr.cimg,\n      dl = imgd.length;\n    wUi(data, offset, dl + (j == 0 ? 0 : 4));\n    offset += 4;\n    var ioff = offset;\n    wAs(data, offset, j == 0 ? \"IDAT\" : \"fdAT\");\n    offset += 4;\n    if (j != 0) {\n      wUi(data, offset, fi++);\n      offset += 4;\n    }\n    data.set(imgd, offset);\n    offset += dl;\n    wUi(data, offset, crc(data, ioff, offset - ioff));\n    offset += 4; // crc\n  }\n\n  wUi(data, offset, 0);\n  offset += 4;\n  wAs(data, offset, \"IEND\");\n  offset += 4;\n  wUi(data, offset, crc(data, offset - 4, 4));\n  offset += 4; // crc\n\n  return data.buffer;\n};\nUPNG.encode.compressPNG = function (out, filter, levelZero) {\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i],\n      nw = frm.rect.width,\n      nh = frm.rect.height;\n    var fdata = new Uint8Array(nh * frm.bpl + nh);\n    frm.cimg = UPNG.encode._filterZero(frm.img, nh, frm.bpp, frm.bpl, fdata, filter, levelZero);\n  }\n};\nUPNG.encode.compress = function (bufs, w, h, ps, prms)\n// prms:  onlyBlend, minBits, forbidPlte\n{\n  //var time = Date.now();\n  var onlyBlend = prms[0],\n    evenCrd = prms[1],\n    forbidPrev = prms[2],\n    minBits = prms[3],\n    forbidPlte = prms[4];\n  var ctype = 6,\n    depth = 8,\n    alphaAnd = 255;\n  for (var j = 0; j < bufs.length; j++) {\n    // when not quantized, other frames can contain colors, that are not in an initial frame\n    var img = new Uint8Array(bufs[j]),\n      ilen = img.length;\n    for (var i = 0; i < ilen; i += 4) alphaAnd &= img[i + 3];\n  }\n  var gotAlpha = alphaAnd != 255;\n\n  //console.log(\"alpha check\", Date.now()-time);  time = Date.now();\n\n  //var brute = gotAlpha && forGIF;\t\t// brute : frames can only be copied, not \"blended\"\n  var frms = UPNG.encode.framize(bufs, w, h, onlyBlend, evenCrd, forbidPrev);\n  //console.log(\"framize\", Date.now()-time);  time = Date.now();\n\n  var cmap = {},\n    plte = [],\n    inds = [];\n  if (ps != 0) {\n    var nbufs = [];\n    for (var i = 0; i < frms.length; i++) nbufs.push(frms[i].img.buffer);\n    var abuf = UPNG.encode.concatRGBA(nbufs),\n      qres = UPNG.quantize(abuf, ps);\n    var cof = 0,\n      bb = new Uint8Array(qres.abuf);\n    for (var i = 0; i < frms.length; i++) {\n      var ti = frms[i].img,\n        bln = ti.length;\n      inds.push(new Uint8Array(qres.inds.buffer, cof >> 2, bln >> 2));\n      for (var j = 0; j < bln; j += 4) {\n        ti[j] = bb[cof + j];\n        ti[j + 1] = bb[cof + j + 1];\n        ti[j + 2] = bb[cof + j + 2];\n        ti[j + 3] = bb[cof + j + 3];\n      }\n      cof += bln;\n    }\n    for (var i = 0; i < qres.plte.length; i++) plte.push(qres.plte[i].est.rgba);\n    //console.log(\"quantize\", Date.now()-time);  time = Date.now();\n  } else {\n    // what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used\n    for (var j = 0; j < frms.length; j++) {\n      // when not quantized, other frames can contain colors, that are not in an initial frame\n      var frm = frms[j],\n        img32 = new Uint32Array(frm.img.buffer),\n        nw = frm.rect.width,\n        ilen = img32.length;\n      var ind = new Uint8Array(ilen);\n      inds.push(ind);\n      for (var i = 0; i < ilen; i++) {\n        var c = img32[i];\n        if (i != 0 && c == img32[i - 1]) ind[i] = ind[i - 1];else if (i > nw && c == img32[i - nw]) ind[i] = ind[i - nw];else {\n          var cmc = cmap[c];\n          if (cmc == null) {\n            cmap[c] = cmc = plte.length;\n            plte.push(c);\n            if (plte.length >= 300) break;\n          }\n          ind[i] = cmc;\n        }\n      }\n    }\n    //console.log(\"make palette\", Date.now()-time);  time = Date.now();\n  }\n\n  var cc = plte.length; //console.log(\"colors:\",cc);\n  if (cc <= 256 && forbidPlte == false) {\n    if (cc <= 2) depth = 1;else if (cc <= 4) depth = 2;else if (cc <= 16) depth = 4;else depth = 8;\n    depth = Math.max(depth, minBits);\n  }\n  for (var j = 0; j < frms.length; j++) {\n    var frm = frms[j],\n      nx = frm.rect.x,\n      ny = frm.rect.y,\n      nw = frm.rect.width,\n      nh = frm.rect.height;\n    var cimg = frm.img,\n      cimg32 = new Uint32Array(cimg.buffer);\n    var bpl = 4 * nw,\n      bpp = 4;\n    if (cc <= 256 && forbidPlte == false) {\n      bpl = Math.ceil(depth * nw / 8);\n      var nimg = new Uint8Array(bpl * nh);\n      var inj = inds[j];\n      for (var y = 0; y < nh; y++) {\n        var i = y * bpl,\n          ii = y * nw;\n        if (depth == 8) for (var x = 0; x < nw; x++) nimg[i + x] = inj[ii + x];else if (depth == 4) for (var x = 0; x < nw; x++) nimg[i + (x >> 1)] |= inj[ii + x] << 4 - (x & 1) * 4;else if (depth == 2) for (var x = 0; x < nw; x++) nimg[i + (x >> 2)] |= inj[ii + x] << 6 - (x & 3) * 2;else if (depth == 1) for (var x = 0; x < nw; x++) nimg[i + (x >> 3)] |= inj[ii + x] << 7 - (x & 7) * 1;\n      }\n      cimg = nimg;\n      ctype = 3;\n      bpp = 1;\n    } else if (gotAlpha == false && frms.length == 1) {\n      // some next \"reduced\" frames may contain alpha for blending\n      var nimg = new Uint8Array(nw * nh * 3),\n        area = nw * nh;\n      for (var i = 0; i < area; i++) {\n        var ti = i * 3,\n          qi = i * 4;\n        nimg[ti] = cimg[qi];\n        nimg[ti + 1] = cimg[qi + 1];\n        nimg[ti + 2] = cimg[qi + 2];\n      }\n      cimg = nimg;\n      ctype = 2;\n      bpp = 3;\n      bpl = 3 * nw;\n    }\n    frm.img = cimg;\n    frm.bpl = bpl;\n    frm.bpp = bpp;\n  }\n  //console.log(\"colors => palette indices\", Date.now()-time);  time = Date.now();\n\n  return {\n    ctype: ctype,\n    depth: depth,\n    plte: plte,\n    frames: frms\n  };\n};\nUPNG.encode.framize = function (bufs, w, h, alwaysBlend, evenCrd, forbidPrev) {\n  /*  DISPOSE\n      - 0 : no change\n  \t- 1 : clear to transparent\n  \t- 2 : retstore to content before rendering (previous frame disposed)\n  \tBLEND\n  \t- 0 : replace\n  \t- 1 : blend\n  */\n  var frms = [];\n  for (var j = 0; j < bufs.length; j++) {\n    var cimg = new Uint8Array(bufs[j]),\n      cimg32 = new Uint32Array(cimg.buffer);\n    var nimg;\n    var nx = 0,\n      ny = 0,\n      nw = w,\n      nh = h,\n      blend = alwaysBlend ? 1 : 0;\n    if (j != 0) {\n      var tlim = forbidPrev || alwaysBlend || j == 1 || frms[j - 2].dispose != 0 ? 1 : 2,\n        tstp = 0,\n        tarea = 1e9;\n      for (var it = 0; it < tlim; it++) {\n        var pimg = new Uint8Array(bufs[j - 1 - it]),\n          p32 = new Uint32Array(bufs[j - 1 - it]);\n        var mix = w,\n          miy = h,\n          max = -1,\n          may = -1;\n        for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\n          var i = y * w + x;\n          if (cimg32[i] != p32[i]) {\n            if (x < mix) mix = x;\n            if (x > max) max = x;\n            if (y < miy) miy = y;\n            if (y > may) may = y;\n          }\n        }\n        if (max == -1) mix = miy = max = may = 0;\n        if (evenCrd) {\n          if ((mix & 1) == 1) mix--;\n          if ((miy & 1) == 1) miy--;\n        }\n        var sarea = (max - mix + 1) * (may - miy + 1);\n        if (sarea < tarea) {\n          tarea = sarea;\n          tstp = it;\n          nx = mix;\n          ny = miy;\n          nw = max - mix + 1;\n          nh = may - miy + 1;\n        }\n      }\n\n      // alwaysBlend: pokud zjistím, že blendit nelze, nastavím předchozímu snímku dispose=1. Zajistím, aby obsahoval můj obdélník.\n      var pimg = new Uint8Array(bufs[j - 1 - tstp]);\n      if (tstp == 1) frms[j - 1].dispose = 2;\n      nimg = new Uint8Array(nw * nh * 4);\n      UPNG._copyTile(pimg, w, h, nimg, nw, nh, -nx, -ny, 0);\n      blend = UPNG._copyTile(cimg, w, h, nimg, nw, nh, -nx, -ny, 3) ? 1 : 0;\n      if (blend == 1) UPNG.encode._prepareDiff(cimg, w, h, nimg, {\n        x: nx,\n        y: ny,\n        width: nw,\n        height: nh\n      });else UPNG._copyTile(cimg, w, h, nimg, nw, nh, -nx, -ny, 0);\n      //UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, blend==1?2:0);\n    } else nimg = cimg.slice(0); // img may be rewritten further ... don't rewrite input\n\n    frms.push({\n      rect: {\n        x: nx,\n        y: ny,\n        width: nw,\n        height: nh\n      },\n      img: nimg,\n      blend: blend,\n      dispose: 0\n    });\n  }\n  if (alwaysBlend) for (var j = 0; j < frms.length; j++) {\n    var frm = frms[j];\n    if (frm.blend == 1) continue;\n    var r0 = frm.rect,\n      r1 = frms[j - 1].rect;\n    var miX = Math.min(r0.x, r1.x),\n      miY = Math.min(r0.y, r1.y);\n    var maX = Math.max(r0.x + r0.width, r1.x + r1.width),\n      maY = Math.max(r0.y + r0.height, r1.y + r1.height);\n    var r = {\n      x: miX,\n      y: miY,\n      width: maX - miX,\n      height: maY - miY\n    };\n    frms[j - 1].dispose = 1;\n    if (j - 1 != 0) UPNG.encode._updateFrame(bufs, w, h, frms, j - 1, r, evenCrd);\n    UPNG.encode._updateFrame(bufs, w, h, frms, j, r, evenCrd);\n  }\n  var area = 0;\n  if (bufs.length != 1) for (var i = 0; i < frms.length; i++) {\n    var frm = frms[i];\n    area += frm.rect.width * frm.rect.height;\n    //if(i==0 || frm.blend!=1) continue;\n    //var ob = new Uint8Array(\n    //console.log(frm.blend, frm.dispose, frm.rect);\n  }\n  //if(area!=0) console.log(area);\n  return frms;\n};\nUPNG.encode._updateFrame = function (bufs, w, h, frms, i, r, evenCrd) {\n  var U8 = Uint8Array,\n    U32 = Uint32Array;\n  var pimg = new U8(bufs[i - 1]),\n    pimg32 = new U32(bufs[i - 1]),\n    nimg = i + 1 < bufs.length ? new U8(bufs[i + 1]) : null;\n  var cimg = new U8(bufs[i]),\n    cimg32 = new U32(cimg.buffer);\n  var mix = w,\n    miy = h,\n    max = -1,\n    may = -1;\n  for (var y = 0; y < r.height; y++) for (var x = 0; x < r.width; x++) {\n    var cx = r.x + x,\n      cy = r.y + y;\n    var j = cy * w + cx,\n      cc = cimg32[j];\n    // no need to draw transparency, or to dispose it. Or, if writing the same color and the next one does not need transparency.\n    if (cc == 0 || frms[i - 1].dispose == 0 && pimg32[j] == cc && (nimg == null || nimg[j * 4 + 3] != 0) /**/) {} else {\n      if (cx < mix) mix = cx;\n      if (cx > max) max = cx;\n      if (cy < miy) miy = cy;\n      if (cy > may) may = cy;\n    }\n  }\n  if (max == -1) mix = miy = max = may = 0;\n  if (evenCrd) {\n    if ((mix & 1) == 1) mix--;\n    if ((miy & 1) == 1) miy--;\n  }\n  r = {\n    x: mix,\n    y: miy,\n    width: max - mix + 1,\n    height: may - miy + 1\n  };\n  var fr = frms[i];\n  fr.rect = r;\n  fr.blend = 1;\n  fr.img = new Uint8Array(r.width * r.height * 4);\n  if (frms[i - 1].dispose == 0) {\n    UPNG._copyTile(pimg, w, h, fr.img, r.width, r.height, -r.x, -r.y, 0);\n    UPNG.encode._prepareDiff(cimg, w, h, fr.img, r);\n    //UPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 2);\n  } else UPNG._copyTile(cimg, w, h, fr.img, r.width, r.height, -r.x, -r.y, 0);\n};\nUPNG.encode._prepareDiff = function (cimg, w, h, nimg, rec) {\n  UPNG._copyTile(cimg, w, h, nimg, rec.width, rec.height, -rec.x, -rec.y, 2);\n  /*\n  var n32 = new Uint32Array(nimg.buffer);\n  var og = new Uint8Array(rec.width*rec.height*4), o32 = new Uint32Array(og.buffer);\n  UPNG._copyTile(cimg,w,h, og,rec.width,rec.height, -rec.x,-rec.y, 0);\n  for(var i=4; i<nimg.length; i+=4) {\n  \tif(nimg[i-1]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)-1]) {\n  \t\tn32[i>>>2]=o32[i>>>2];\n  \t\t//var j = i, c=p32[(i>>>2)-1];\n  \t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n  \t}\n  }\n  for(var i=nimg.length-8; i>0; i-=4) {\n  \tif(nimg[i+7]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)+1]) {\n  \t\tn32[i>>>2]=o32[i>>>2];\n  \t\t//var j = i, c=p32[(i>>>2)-1];\n  \t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n  \t}\n  }*/\n};\n\nUPNG.encode._filterZero = function (img, h, bpp, bpl, data, filter, levelZero) {\n  var fls = [],\n    ftry = [0, 1, 2, 3, 4];\n  if (filter != -1) ftry = [filter];else if (h * bpl > 500000 || bpp == 1) ftry = [0];\n  var opts;\n  if (levelZero) opts = {\n    level: 0\n  };\n  var CMPR = levelZero && UZIP != null ? UZIP : pako;\n  for (var i = 0; i < ftry.length; i++) {\n    for (var y = 0; y < h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, ftry[i]);\n    //var nimg = new Uint8Array(data.length);\n    //var sz = UZIP.F.deflate(data, nimg);  fls.push(nimg.slice(0,sz));\n    //var dfl = pako[\"deflate\"](data), dl=dfl.length-4;\n    //var crc = (dfl[dl+3]<<24)|(dfl[dl+2]<<16)|(dfl[dl+1]<<8)|(dfl[dl+0]<<0);\n    //console.log(crc, UZIP.adler(data,2,data.length-6));\n    fls.push(CMPR[\"deflate\"](data, opts));\n  }\n  var ti,\n    tsize = 1e9;\n  for (var i = 0; i < fls.length; i++) if (fls[i].length < tsize) {\n    ti = i;\n    tsize = fls[i].length;\n  }\n  return fls[ti];\n};\nUPNG.encode._filterLine = function (data, img, y, bpl, bpp, type) {\n  var i = y * bpl,\n    di = i + y,\n    paeth = UPNG.decode._paeth;\n  data[di] = type;\n  di++;\n  if (type == 0) {\n    if (bpl < 500) for (var x = 0; x < bpl; x++) data[di + x] = img[i + x];else data.set(new Uint8Array(img.buffer, i, bpl), di);\n  } else if (type == 1) {\n    for (var x = 0; x < bpp; x++) data[di + x] = img[i + x];\n    for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x] - img[i + x - bpp] + 256 & 255;\n  } else if (y == 0) {\n    for (var x = 0; x < bpp; x++) data[di + x] = img[i + x];\n    if (type == 2) for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x];\n    if (type == 3) for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x] - (img[i + x - bpp] >> 1) + 256 & 255;\n    if (type == 4) for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x] - paeth(img[i + x - bpp], 0, 0) + 256 & 255;\n  } else {\n    if (type == 2) {\n      for (var x = 0; x < bpl; x++) data[di + x] = img[i + x] + 256 - img[i + x - bpl] & 255;\n    }\n    if (type == 3) {\n      for (var x = 0; x < bpp; x++) data[di + x] = img[i + x] + 256 - (img[i + x - bpl] >> 1) & 255;\n      for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x] + 256 - (img[i + x - bpl] + img[i + x - bpp] >> 1) & 255;\n    }\n    if (type == 4) {\n      for (var x = 0; x < bpp; x++) data[di + x] = img[i + x] + 256 - paeth(0, img[i + x - bpl], 0) & 255;\n      for (var x = bpp; x < bpl; x++) data[di + x] = img[i + x] + 256 - paeth(img[i + x - bpp], img[i + x - bpl], img[i + x - bpp - bpl]) & 255;\n    }\n  }\n};\nUPNG.crc = {\n  table: function () {\n    var tab = new Uint32Array(256);\n    for (var n = 0; n < 256; n++) {\n      var c = n;\n      for (var k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ c >>> 1;else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  }(),\n  update: function (c, buf, off, len) {\n    for (var i = 0; i < len; i++) c = UPNG.crc.table[(c ^ buf[off + i]) & 0xff] ^ c >>> 8;\n    return c;\n  },\n  crc: function (b, o, l) {\n    return UPNG.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUPNG.quantize = function (abuf, ps) {\n  var oimg = new Uint8Array(abuf),\n    nimg = oimg.slice(0),\n    nimg32 = new Uint32Array(nimg.buffer);\n  var KD = UPNG.quantize.getKDtree(nimg, ps);\n  var root = KD[0],\n    leafs = KD[1];\n  var planeDst = UPNG.quantize.planeDst;\n  var sb = oimg,\n    tb = nimg32,\n    len = sb.length;\n  var inds = new Uint8Array(oimg.length >> 2);\n  for (var i = 0; i < len; i += 4) {\n    var r = sb[i] * (1 / 255),\n      g = sb[i + 1] * (1 / 255),\n      b = sb[i + 2] * (1 / 255),\n      a = sb[i + 3] * (1 / 255);\n\n    //  exact, but too slow :(\n    var nd = UPNG.quantize.getNearest(root, r, g, b, a);\n    //var nd = root;\n    //while(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;\n\n    inds[i >> 2] = nd.ind;\n    tb[i >> 2] = nd.est.rgba;\n  }\n  return {\n    abuf: nimg.buffer,\n    inds: inds,\n    plte: leafs\n  };\n};\nUPNG.quantize.getKDtree = function (nimg, ps, err) {\n  if (err == null) err = 0.0001;\n  var nimg32 = new Uint32Array(nimg.buffer);\n  var root = {\n    i0: 0,\n    i1: nimg.length,\n    bst: null,\n    est: null,\n    tdst: 0,\n    left: null,\n    right: null\n  }; // basic statistic, extra statistic\n  root.bst = UPNG.quantize.stats(nimg, root.i0, root.i1);\n  root.est = UPNG.quantize.estats(root.bst);\n  var leafs = [root];\n  while (leafs.length < ps) {\n    var maxL = 0,\n      mi = 0;\n    for (var i = 0; i < leafs.length; i++) if (leafs[i].est.L > maxL) {\n      maxL = leafs[i].est.L;\n      mi = i;\n    }\n    if (maxL < err) break;\n    var node = leafs[mi];\n    var s0 = UPNG.quantize.splitPixels(nimg, nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);\n    var s0wrong = node.i0 >= s0 || node.i1 <= s0;\n    //console.log(maxL, leafs.length, mi);\n    if (s0wrong) {\n      node.est.L = 0;\n      continue;\n    }\n    var ln = {\n      i0: node.i0,\n      i1: s0,\n      bst: null,\n      est: null,\n      tdst: 0,\n      left: null,\n      right: null\n    };\n    ln.bst = UPNG.quantize.stats(nimg, ln.i0, ln.i1);\n    ln.est = UPNG.quantize.estats(ln.bst);\n    var rn = {\n      i0: s0,\n      i1: node.i1,\n      bst: null,\n      est: null,\n      tdst: 0,\n      left: null,\n      right: null\n    };\n    rn.bst = {\n      R: [],\n      m: [],\n      N: node.bst.N - ln.bst.N\n    };\n    for (var i = 0; i < 16; i++) rn.bst.R[i] = node.bst.R[i] - ln.bst.R[i];\n    for (var i = 0; i < 4; i++) rn.bst.m[i] = node.bst.m[i] - ln.bst.m[i];\n    rn.est = UPNG.quantize.estats(rn.bst);\n    node.left = ln;\n    node.right = rn;\n    leafs[mi] = ln;\n    leafs.push(rn);\n  }\n  leafs.sort(function (a, b) {\n    return b.bst.N - a.bst.N;\n  });\n  for (var i = 0; i < leafs.length; i++) leafs[i].ind = i;\n  return [root, leafs];\n};\nUPNG.quantize.getNearest = function (nd, r, g, b, a) {\n  if (nd.left == null) {\n    nd.tdst = UPNG.quantize.dist(nd.est.q, r, g, b, a);\n    return nd;\n  }\n  var planeDst = UPNG.quantize.planeDst(nd.est, r, g, b, a);\n  var node0 = nd.left,\n    node1 = nd.right;\n  if (planeDst > 0) {\n    node0 = nd.right;\n    node1 = nd.left;\n  }\n  var ln = UPNG.quantize.getNearest(node0, r, g, b, a);\n  if (ln.tdst <= planeDst * planeDst) return ln;\n  var rn = UPNG.quantize.getNearest(node1, r, g, b, a);\n  return rn.tdst < ln.tdst ? rn : ln;\n};\nUPNG.quantize.planeDst = function (est, r, g, b, a) {\n  var e = est.e;\n  return e[0] * r + e[1] * g + e[2] * b + e[3] * a - est.eMq;\n};\nUPNG.quantize.dist = function (q, r, g, b, a) {\n  var d0 = r - q[0],\n    d1 = g - q[1],\n    d2 = b - q[2],\n    d3 = a - q[3];\n  return d0 * d0 + d1 * d1 + d2 * d2 + d3 * d3;\n};\nUPNG.quantize.splitPixels = function (nimg, nimg32, i0, i1, e, eMq) {\n  var vecDot = UPNG.quantize.vecDot;\n  i1 -= 4;\n  var shfs = 0;\n  while (i0 < i1) {\n    while (vecDot(nimg, i0, e) <= eMq) i0 += 4;\n    while (vecDot(nimg, i1, e) > eMq) i1 -= 4;\n    if (i0 >= i1) break;\n    var t = nimg32[i0 >> 2];\n    nimg32[i0 >> 2] = nimg32[i1 >> 2];\n    nimg32[i1 >> 2] = t;\n    i0 += 4;\n    i1 -= 4;\n  }\n  while (vecDot(nimg, i0, e) > eMq) i0 -= 4;\n  return i0 + 4;\n};\nUPNG.quantize.vecDot = function (nimg, i, e) {\n  return nimg[i] * e[0] + nimg[i + 1] * e[1] + nimg[i + 2] * e[2] + nimg[i + 3] * e[3];\n};\nUPNG.quantize.stats = function (nimg, i0, i1) {\n  var R = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  var m = [0, 0, 0, 0];\n  var N = i1 - i0 >> 2;\n  for (var i = i0; i < i1; i += 4) {\n    var r = nimg[i] * (1 / 255),\n      g = nimg[i + 1] * (1 / 255),\n      b = nimg[i + 2] * (1 / 255),\n      a = nimg[i + 3] * (1 / 255);\n    //var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];\n    m[0] += r;\n    m[1] += g;\n    m[2] += b;\n    m[3] += a;\n    R[0] += r * r;\n    R[1] += r * g;\n    R[2] += r * b;\n    R[3] += r * a;\n    R[5] += g * g;\n    R[6] += g * b;\n    R[7] += g * a;\n    R[10] += b * b;\n    R[11] += b * a;\n    R[15] += a * a;\n  }\n  R[4] = R[1];\n  R[8] = R[2];\n  R[9] = R[6];\n  R[12] = R[3];\n  R[13] = R[7];\n  R[14] = R[11];\n  return {\n    R: R,\n    m: m,\n    N: N\n  };\n};\nUPNG.quantize.estats = function (stats) {\n  var R = stats.R,\n    m = stats.m,\n    N = stats.N;\n\n  // when all samples are equal, but N is large (millions), the Rj can be non-zero ( 0.0003.... - precission error)\n  var m0 = m[0],\n    m1 = m[1],\n    m2 = m[2],\n    m3 = m[3],\n    iN = N == 0 ? 0 : 1 / N;\n  var Rj = [R[0] - m0 * m0 * iN, R[1] - m0 * m1 * iN, R[2] - m0 * m2 * iN, R[3] - m0 * m3 * iN, R[4] - m1 * m0 * iN, R[5] - m1 * m1 * iN, R[6] - m1 * m2 * iN, R[7] - m1 * m3 * iN, R[8] - m2 * m0 * iN, R[9] - m2 * m1 * iN, R[10] - m2 * m2 * iN, R[11] - m2 * m3 * iN, R[12] - m3 * m0 * iN, R[13] - m3 * m1 * iN, R[14] - m3 * m2 * iN, R[15] - m3 * m3 * iN];\n  var A = Rj,\n    M = UPNG.M4;\n  var b = [0.5, 0.5, 0.5, 0.5],\n    mi = 0,\n    tmi = 0;\n  if (N != 0) for (var i = 0; i < 10; i++) {\n    b = M.multVec(A, b);\n    tmi = Math.sqrt(M.dot(b, b));\n    b = M.sml(1 / tmi, b);\n    if (Math.abs(tmi - mi) < 1e-9) break;\n    mi = tmi;\n  }\n  //b = [0,0,1,0];  mi=N;\n  var q = [m0 * iN, m1 * iN, m2 * iN, m3 * iN];\n  var eMq255 = M.dot(M.sml(255, q), b);\n  return {\n    Cov: Rj,\n    q: q,\n    e: b,\n    L: mi,\n    eMq255: eMq255,\n    eMq: M.dot(b, q),\n    rgba: (Math.round(255 * q[3]) << 24 | Math.round(255 * q[2]) << 16 | Math.round(255 * q[1]) << 8 | Math.round(255 * q[0]) << 0) >>> 0\n  };\n};\nUPNG.M4 = {\n  multVec: function (m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2] + m[3] * v[3], m[4] * v[0] + m[5] * v[1] + m[6] * v[2] + m[7] * v[3], m[8] * v[0] + m[9] * v[1] + m[10] * v[2] + m[11] * v[3], m[12] * v[0] + m[13] * v[1] + m[14] * v[2] + m[15] * v[3]];\n  },\n  dot: function (x, y) {\n    return x[0] * y[0] + x[1] * y[1] + x[2] * y[2] + x[3] * y[3];\n  },\n  sml: function (a, y) {\n    return [a * y[0], a * y[1], a * y[2], a * y[3]];\n  }\n};\nUPNG.encode.concatRGBA = function (bufs) {\n  var tlen = 0;\n  for (var i = 0; i < bufs.length; i++) tlen += bufs[i].byteLength;\n  var nimg = new Uint8Array(tlen),\n    noff = 0;\n  for (var i = 0; i < bufs.length; i++) {\n    var img = new Uint8Array(bufs[i]),\n      il = img.length;\n    for (var j = 0; j < il; j += 4) {\n      var r = img[j],\n        g = img[j + 1],\n        b = img[j + 2],\n        a = img[j + 3];\n      if (a == 0) r = g = b = 0;\n      nimg[noff + j] = r;\n      nimg[noff + j + 1] = g;\n      nimg[noff + j + 2] = b;\n      nimg[noff + j + 3] = a;\n    }\n    noff += il;\n  }\n  return nimg.buffer;\n};\nexport default UPNG;","map":{"version":3,"names":["pako","UPNG","toRGBA8","out","w","width","h","height","tabs","acTL","decodeImage","data","buffer","frms","frames","len","img","Uint8Array","empty","prev","i","length","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","decode","_getBPP","bpl","Math","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","time","Date","now","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","di","gr","off","to","al","buff","offset","bin","rUs","rUi","readUint","dd","doff","fd","foff","mgck","type","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","keyw","text","cflag","cmeth","ltag","tkeyw","readUTF8","readBytes","pl","crc","compress","interlace","filter","_inflate","_filterZero","_readInterlace","inflateRaw","H","N","W","R","m","J","Q","X","u","d","v","C","V","n","b","A","e","l","M","I","Z","D","q","set","byteOffset","E","c","K","r","S","T","z","_","$","s","Y","a","Uint16Array","t","k","g","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","row","col","cdi","val","ii","noc","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","min","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa","encode","bufs","ps","dels","forbidPlte","nimg","compressPNG","_main","encodeLL","ac","bipp","bipl","wUi","wUs","wAs","anim","pltAlpha","leng","dl","plte","cimg","wr","fi","imgd","ioff","levelZero","nw","nh","prms","onlyBlend","evenCrd","forbidPrev","minBits","alphaAnd","ilen","gotAlpha","framize","cmap","inds","nbufs","abuf","concatRGBA","qres","quantize","cof","bln","est","rgba","img32","ind","cmc","max","nx","ny","cimg32","inj","alwaysBlend","tlim","tstp","tarea","it","pimg","p32","mix","miy","may","sarea","_prepareDiff","r0","r1","miX","miY","maX","maY","_updateFrame","U8","U32","pimg32","cx","cy","rec","fls","ftry","opts","level","CMPR","UZIP","_filterLine","tsize","table","tab","update","buf","o","oimg","nimg32","KD","getKDtree","root","leafs","planeDst","nd","getNearest","err","i0","i1","bst","tdst","left","right","stats","estats","maxL","mi","L","node","splitPixels","eMq255","s0wrong","ln","rn","sort","dist","node0","node1","eMq","d0","d1","d2","d3","vecDot","shfs","m0","m1","m2","m3","iN","Rj","M4","tmi","multVec","sqrt","dot","sml","abs","Cov","tlen","byteLength","noff","il"],"sources":["C:/Users/TongNPZ/Desktop/my-app-2.0/node_modules/@pdf-lib/upng/UPNG.js"],"sourcesContent":["import pako from 'pako';\n\nvar UPNG = {};\n\n\t\n\nUPNG.toRGBA8 = function(out)\n{\n\tvar w = out.width, h = out.height;\n\tif(out.tabs.acTL==null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n\t\n\tvar frms = [];\n\tif(out.frames[0].data==null) out.frames[0].data = out.data;\n\t\n\tvar len = w*h*4, img = new Uint8Array(len), empty = new Uint8Array(len), prev=new Uint8Array(len);\n\tfor(var i=0; i<out.frames.length; i++)\n\t{\n\t\tvar frm = out.frames[i];\n\t\tvar fx=frm.rect.x, fy=frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage(frm.data, fw,fh, out);\n\t\t\n\t\tif(i!=0) for(var j=0; j<len; j++) prev[j]=img[j];\n\t\t\n\t\tif     (frm.blend==0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.blend==1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n\t\t\n\t\tfrms.push(img.buffer.slice(0));\n\t\t\n\t\tif     (frm.dispose==0) {}\n\t\telse if(frm.dispose==1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.dispose==2) for(var j=0; j<len; j++) img[j]=prev[j];\n\t}\n\treturn frms;\n}\nUPNG.toRGBA8.decodeImage = function(data, w, h, out)\n{\n\tvar area = w*h, bpp = UPNG.decode._getBPP(out);\n\tvar bpl = Math.ceil(w*bpp/8);\t// bytes per line\n\n\tvar bf = new Uint8Array(area*4), bf32 = new Uint32Array(bf.buffer);\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\t\n\t//console.log(ctype, depth);\n\tvar time = Date.now();\n\n\tif     (ctype==6) { // RGB + alpha\n\t\tvar qarea = area<<2;\n\t\tif(depth== 8) for(var i=0; i<qarea;i+=4) {  bf[i] = data[i];  bf[i+1] = data[i+1];  bf[i+2] = data[i+2];  bf[i+3] = data[i+3]; }\n\t\tif(depth==16) for(var i=0; i<qarea;i++ ) {  bf[i] = data[i<<1];  }\n\t}\n\telse if(ctype==2) {\t// RGB\n\t\tvar ts=out.tabs[\"tRNS\"];\n\t\tif(ts==null) {\n\t\t\tif(depth== 8) for(var i=0; i<area; i++) {  var ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];  }\n\t\t\tif(depth==16) for(var i=0; i<area; i++) {  var ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];  }\n\t\t}\n\t\telse {  var tr=ts[0], tg=ts[1], tb=ts[2];\n\t\t\tif(depth== 8) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];\n\t\t\t\tif(data[ti]   ==tr && data[ti+1]   ==tg && data[ti+2]   ==tb) bf[qi+3] = 0;  }\n\t\t\tif(depth==16) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];\n\t\t\t\tif(rs(data,ti)==tr && rs(data,ti+2)==tg && rs(data,ti+4)==tb) bf[qi+3] = 0;  }\n\t\t}\n\t}\n\telse if(ctype==3) {\t// palette\n\t\tvar p=out.tabs[\"PLTE\"], ap=out.tabs[\"tRNS\"], tl=ap?ap.length:0;\n\t\t//console.log(p, ap);\n\t\tif(depth==1) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>3)]>>(7-((i&7)<<0)))& 1), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==2) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>2)]>>(6-((i&3)<<1)))& 3), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==4) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>1)]>>(4-((i&1)<<2)))&15), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==8) for(var i=0; i<area; i++ ) {  var qi=i<<2, j=data[i]                      , cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t}\n\telse if(ctype==4) {\t// gray + alpha\n\t\tif(depth== 8)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<1, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+1];  }\n\t\tif(depth==16)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<2, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+2];  }\n\t}\n\telse if(ctype==0) {\t// gray\n\t\tvar tr = out.tabs[\"tRNS\"] ? out.tabs[\"tRNS\"] : -1;\n\t\tfor(var y=0; y<h; y++) {\n\t\t\tvar off = y*bpl, to = y*w;\n\t\t\tif     (depth== 1) for(var x=0; x<w; x++) {  var gr=255*((data[off+(x>>>3)]>>>(7 -((x&7)   )))& 1), al=(gr==tr*255)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 2) for(var x=0; x<w; x++) {  var gr= 85*((data[off+(x>>>2)]>>>(6 -((x&3)<<1)))& 3), al=(gr==tr* 85)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 4) for(var x=0; x<w; x++) {  var gr= 17*((data[off+(x>>>1)]>>>(4 -((x&1)<<2)))&15), al=(gr==tr* 17)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth== 8) for(var x=0; x<w; x++) {  var gr=data[off+     x], al=(gr                 ==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t\telse if(depth==16) for(var x=0; x<w; x++) {  var gr=data[off+(x<<1)], al=(rs(data,off+(x<<i))==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\t}\n\t}\n\t//console.log(Date.now()-time);\n\treturn bf;\n}\n\n\n\nUPNG.decode = function(buff)\n{\n\tvar data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = {tabs:{}, frames:[]};\n\tvar dd = new Uint8Array(data.length), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\t\n\tvar mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) if(data[i]!=mgck[i]) throw \"The input is not a PNG file!\";\n\n\twhile(offset<data.length)\n\t{\n\t\tvar len  = bin.readUint(data, offset);  offset += 4;\n\t\tvar type = bin.readASCII(data, offset, 4);  offset += 4;\n\t\t//console.log(type,len);\n\t\t\n\t\tif     (type==\"IHDR\")  {  UPNG.decode._IHDR(data, offset, out);  }\n\t\telse if(type==\"IDAT\") {\n\t\t\tfor(var i=0; i<len; i++) dd[doff+i] = data[offset+i];\n\t\t\tdoff += len;\n\t\t}\n\t\telse if(type==\"acTL\")  {\n\t\t\tout.tabs[type] = {  num_frames:rUi(data, offset), num_plays:rUi(data, offset+4)  };\n\t\t\tfd = new Uint8Array(data.length);\n\t\t}\n\t\telse if(type==\"fcTL\")  {\n\t\t\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\t\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t\t\t}\n\t\t\tvar rct = {x:rUi(data, offset+12),y:rUi(data, offset+16),width:rUi(data, offset+4),height:rUi(data, offset+8)};\n\t\t\tvar del = rUs(data, offset+22);  del = rUs(data, offset+20) / (del==0?100:del);\n\t\t\tvar frm = {rect:rct, delay:Math.round(del*1000), dispose:data[offset+24], blend:data[offset+25]};\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push(frm);\n\t\t}\n\t\telse if(type==\"fdAT\") {\n\t\t\tfor(var i=0; i<len-4; i++) fd[foff+i] = data[offset+i+4];\n\t\t\tfoff += len-4;\n\t\t}\n\t\telse if(type==\"pHYs\") {\n\t\t\tout.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset+4), data[offset+8]];\n\t\t}\n\t\telse if(type==\"cHRM\") {\n\t\t\tout.tabs[type] = [];\n\t\t\tfor(var i=0; i<8; i++) out.tabs[type].push(bin.readUint(data, offset+i*4));\n\t\t}\n\t\telse if(type==\"tEXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = bin.nextZero(data, offset);\n\t\t\tvar keyw = bin.readASCII(data, offset, nz-offset);\n\t\t\tvar text = bin.readASCII(data, nz+1, offset+len-nz-1);\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"iTXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar keyw = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tvar cflag = data[off], cmeth = data[off+1];  off+=2;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar ltag = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar tkeyw = bin.readUTF8(data, off, nz-off);  off = nz + 1;\n\t\t\tvar text  = bin.readUTF8(data, off, len-(off-offset));\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"PLTE\") {\n\t\t\tout.tabs[type] = bin.readBytes(data, offset, len);\n\t\t}\n\t\telse if(type==\"hIST\") {\n\t\t\tvar pl = out.tabs[\"PLTE\"].length/3;\n\t\t\tout.tabs[type] = [];  for(var i=0; i<pl; i++) out.tabs[type].push(rUs(data, offset+i*2));\n\t\t}\n\t\telse if(type==\"tRNS\") {\n\t\t\tif     (out.ctype==3) out.tabs[type] = bin.readBytes(data, offset, len);\n\t\t\telse if(out.ctype==0) out.tabs[type] = rUs(data, offset);\n\t\t\telse if(out.ctype==2) out.tabs[type] = [ rUs(data,offset),rUs(data,offset+2),rUs(data,offset+4) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\t\t}\n\t\telse if(type==\"gAMA\") out.tabs[type] = bin.readUint(data, offset)/100000;\n\t\telse if(type==\"sRGB\") out.tabs[type] = data[offset];\n\t\telse if(type==\"bKGD\")\n\t\t{\n\t\t\tif     (out.ctype==0 || out.ctype==4) out.tabs[type] = [rUs(data, offset)];\n\t\t\telse if(out.ctype==2 || out.ctype==6) out.tabs[type] = [rUs(data, offset), rUs(data, offset+2), rUs(data, offset+4)];\n\t\t\telse if(out.ctype==3) out.tabs[type] = data[offset];\n\t\t}\n\t\telse if(type==\"IEND\") {\n\t\t\tbreak;\n\t\t}\n\t\t//else {  log(\"unknown chunk type\", type, len);  }\n\t\toffset += len;\n\t\tvar crc = bin.readUint(data, offset);  offset += 4;\n\t}\n\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t}\t\n\tout.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n\t\n\tdelete out.compress;  delete out.interlace;  delete out.filter;\n\treturn out;\n}\n\nUPNG.decode._decompress = function(out, dd, w, h) {\n\tvar time = Date.now();\n\tvar bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), buff = new Uint8Array((bpl+1+out.interlace)*h);\n\tdd = UPNG.decode._inflate(dd,buff);\n\t//console.log(dd.length, buff.length);\n\t//console.log(Date.now()-time);\n\n\tvar time=Date.now();\n\tif     (out.interlace==0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);\n\telse if(out.interlace==1) dd = UPNG.decode._readInterlace(dd, out);\n\t//console.log(Date.now()-time);\n\treturn dd;\n}\n\nUPNG.decode._inflate = function(data, buff) {  var out=UPNG[\"inflateRaw\"](new Uint8Array(data.buffer, 2,data.length-6),buff);  return out;  }\nUPNG.inflateRaw=function(){var H={};H.H={};H.H.N=function(N,W){var R=Uint8Array,i=0,m=0,J=0,h=0,Q=0,X=0,u=0,w=0,d=0,v,C;\nif(N[0]==3&&N[1]==0)return W?W:new R(0);var V=H.H,n=V.b,A=V.e,l=V.R,M=V.n,I=V.A,e=V.Z,b=V.m,Z=W==null;\nif(Z)W=new R(N.length>>>2<<3);while(i==0){i=n(N,d,1);m=n(N,d+1,2);d+=3;if(m==0){if((d&7)!=0)d+=8-(d&7);\nvar D=(d>>>3)+4,q=N[D-4]|N[D-3]<<8;if(Z)W=H.H.W(W,w+q);W.set(new R(N.buffer,N.byteOffset+D,q),w);d=D+q<<3;\nw+=q;continue}if(Z)W=H.H.W(W,w+(1<<17));if(m==1){v=b.J;C=b.h;X=(1<<9)-1;u=(1<<5)-1}if(m==2){J=A(N,d,5)+257;\nh=A(N,d+5,5)+1;Q=A(N,d+10,4)+4;d+=14;var E=d,j=1;for(var c=0;c<38;c+=2){b.Q[c]=0;b.Q[c+1]=0}for(var c=0;\nc<Q;c++){var K=A(N,d+c*3,3);b.Q[(b.X[c]<<1)+1]=K;if(K>j)j=K}d+=3*Q;M(b.Q,j);I(b.Q,j,b.u);v=b.w;C=b.d;\nd=l(b.u,(1<<j)-1,J+h,N,d,b.v);var r=V.V(b.v,0,J,b.C);X=(1<<r)-1;var S=V.V(b.v,J,h,b.D);u=(1<<S)-1;M(b.C,r);\nI(b.C,r,v);M(b.D,S);I(b.D,S,C)}while(!0){var T=v[e(N,d)&X];d+=T&15;var p=T>>>4;if(p>>>8==0){W[w++]=p}else if(p==256){break}else{var z=w+p-254;\nif(p>264){var _=b.q[p-257];z=w+(_>>>3)+A(N,d,_&7);d+=_&7}var $=C[e(N,d)&u];d+=$&15;var s=$>>>4,Y=b.c[s],a=(Y>>>4)+n(N,d,Y&15);\nd+=Y&15;while(w<z){W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a]}w=z}}}return W.length==w?W:W.slice(0,w)};\nH.H.W=function(N,W){var R=N.length;if(W<=R)return N;var V=new Uint8Array(R<<1);V.set(N,0);return V};\nH.H.R=function(N,W,R,V,n,A){var l=H.H.e,M=H.H.Z,I=0;while(I<R){var e=N[M(V,n)&W];n+=e&15;var b=e>>>4;\nif(b<=15){A[I]=b;I++}else{var Z=0,m=0;if(b==16){m=3+l(V,n,2);n+=2;Z=A[I-1]}else if(b==17){m=3+l(V,n,3);\nn+=3}else if(b==18){m=11+l(V,n,7);n+=7}var J=I+m;while(I<J){A[I]=Z;I++}}}return n};H.H.V=function(N,W,R,V){var n=0,A=0,l=V.length>>>1;\nwhile(A<R){var M=N[A+W];V[A<<1]=0;V[(A<<1)+1]=M;if(M>n)n=M;A++}while(A<l){V[A<<1]=0;V[(A<<1)+1]=0;A++}return n};\nH.H.n=function(N,W){var R=H.H.m,V=N.length,n,A,l,M,I,e=R.j;for(var M=0;M<=W;M++)e[M]=0;for(M=1;M<V;M+=2)e[N[M]]++;\nvar b=R.K;n=0;e[0]=0;for(A=1;A<=W;A++){n=n+e[A-1]<<1;b[A]=n}for(l=0;l<V;l+=2){I=N[l+1];if(I!=0){N[l]=b[I];\nb[I]++}}};H.H.A=function(N,W,R){var V=N.length,n=H.H.m,A=n.r;for(var l=0;l<V;l+=2)if(N[l+1]!=0){var M=l>>1,I=N[l+1],e=M<<4|I,b=W-I,Z=N[l]<<b,m=Z+(1<<b);\nwhile(Z!=m){var J=A[Z]>>>15-W;R[J]=e;Z++}}};H.H.l=function(N,W){var R=H.H.m.r,V=15-W;for(var n=0;n<N.length;\nn+=2){var A=N[n]<<W-N[n+1];N[n]=R[A]>>>V}};H.H.M=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8};\nH.H.I=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8;N[V+2]|=R>>>16};H.H.e=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8)>>>(W&7)&(1<<R)-1};\nH.H.b=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)&(1<<R)-1};H.H.Z=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)};\nH.H.i=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16|N[(W>>>3)+3]<<24)>>>(W&7)};H.H.m=function(){var N=Uint16Array,W=Uint32Array;\nreturn{K:new N(16),j:new N(16),X:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],T:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],q:new N(32),p:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],z:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],c:new W(32),J:new N(512),_:[],h:new N(32),$:[],w:new N(32768),C:[],v:[],d:new N(32768),D:[],u:new N(512),Q:[],r:new N(1<<15),s:new W(286),Y:new W(30),a:new W(19),t:new W(15e3),k:new N(1<<16),g:new N(1<<15)}}();\n(function(){var N=H.H.m,W=1<<15;for(var R=0;R<W;R++){var V=R;V=(V&2863311530)>>>1|(V&1431655765)<<1;\nV=(V&3435973836)>>>2|(V&858993459)<<2;V=(V&4042322160)>>>4|(V&252645135)<<4;V=(V&4278255360)>>>8|(V&16711935)<<8;\nN.r[R]=(V>>>16|V<<16)>>>17}function n(A,l,M){while(l--!=0)A.push(0,M)}for(var R=0;R<32;R++){N.q[R]=N.S[R]<<3|N.T[R];\nN.c[R]=N.p[R]<<4|N.z[R]}n(N._,144,8);n(N._,255-143,9);n(N._,279-255,7);n(N._,287-279,8);H.H.n(N._,9);\nH.H.A(N._,9,N.J);H.H.l(N._,9);n(N.$,32,5);H.H.n(N.$,5);H.H.A(N.$,5,N.h);H.H.l(N.$,5);n(N.Q,19,0);n(N.C,286,0);\nn(N.D,30,0);n(N.v,320,0)}());return H.H.N}()\n\n\nUPNG.decode._readInterlace = function(data, out)\n{\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP(out), cbpp = bpp>>3, bpl = Math.ceil(w*bpp/8);\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row  = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col  = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass=0;\n\twhile(pass<7)\n\t{\n\t\tvar ri = row_increment[pass], ci = col_increment[pass];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[pass];  while(cr<h) {  cr+=ri;  sh++;  }\n\t\tvar cc = starting_col[pass];  while(cc<w) {  cc+=ci;  sw++;  }\n\t\tvar bpll = Math.ceil(sw*bpp/8);\n\t\tUPNG.decode._filterZero(data, out, di, sw, sh);\n\n\t\tvar y=0, row = starting_row[pass];\n\t\twhile(row<h)\n\t\t{\n\t\t\tvar col = starting_col[pass];\n\t\t\tvar cdi = (di+y*bpll)<<3;\n\n\t\t\twhile(col<w)\n\t\t\t{\n\t\t\t\tif(bpp==1) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(7-(cdi&7)))&1;\n\t\t\t\t\timg[row*bpl + (col>>3)] |= (val << (7-((col&7)<<0)));\n\t\t\t\t}\n\t\t\t\tif(bpp==2) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(6-(cdi&7)))&3;\n\t\t\t\t\timg[row*bpl + (col>>2)] |= (val << (6-((col&3)<<1)));\n\t\t\t\t}\n\t\t\t\tif(bpp==4) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(4-(cdi&7)))&15;\n\t\t\t\t\timg[row*bpl + (col>>1)] |= (val << (4-((col&1)<<2)));\n\t\t\t\t}\n\t\t\t\tif(bpp>=8) {\n\t\t\t\t\tvar ii = row*bpl+col*cbpp;\n\t\t\t\t\tfor(var j=0; j<cbpp; j++) img[ii+j] = data[(cdi>>3)+j];\n\t\t\t\t}\n\t\t\t\tcdi+=bpp;  col+=ci;\n\t\t\t}\n\t\t\ty++;  row += ri;\n\t\t}\n\t\tif(sw*sh!=0) di += sh * (1 + bpll);\n\t\tpass = pass + 1;\n\t}\n\treturn img;\n}\n\nUPNG.decode._getBPP = function(out) {\n\tvar noc = [1,null,3,1,2,null,4][out.ctype];\n\treturn noc * out.depth;\n}\n\nUPNG.decode._filterZero = function(data, out, off, w, h)\n{\n\tvar bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil(bpp/8);\n\t\n\tvar i=0, di=1, type=data[off], x=0;\n\t\n\tif(type>1) data[off]=[0,0,1][type-2];  \n\tif(type==3) for(x=bpp; x<bpl; x++) data[x+1] = (data[x+1] + (data[x+1-bpp]>>>1) )&255;\n\n\tfor(var y=0; y<h; y++)  {\n\t\ti = off+y*bpl; di = i+y+1;\n\t\ttype = data[di-1]; x=0;\n\n\t\tif     (type==0)   for(; x<bpl; x++) data[i+x] = data[di+x];\n\t\telse if(type==1) { for(; x<bpp; x++) data[i+x] = data[di+x];\n\t\t\t\t\t\t   for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpp]);  }\n\t\telse if(type==2) { for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpl]);  }\n\t\telse if(type==3) { for(; x<bpp; x++) data[i+x] = (data[di+x] + ( data[i+x-bpl]>>>1));\n\t\t\t               for(; x<bpl; x++) data[i+x] = (data[di+x] + ((data[i+x-bpl]+data[i+x-bpp])>>>1) );  }\n\t\telse             { for(; x<bpp; x++) data[i+x] = (data[di+x] + paeth(0, data[i+x-bpl], 0));\n\t\t\t\t\t\t   for(; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], data[i+x-bpl], data[i+x-bpp-bpl]) );  }\n\t}\n\treturn data;\n}\n\nUPNG.decode._paeth = function(a,b,c)\n{\n\tvar p = a+b-c, pa = (p-a), pb = (p-b), pc = (p-c);\n\tif (pa*pa <= pb*pb && pa*pa <= pc*pc)  return a;\n\telse if (pb*pb <= pc*pc)  return b;\n\treturn c;\n}\n\nUPNG.decode._IHDR = function(data, offset, out)\n{\n\tvar bin = UPNG._bin;\n\tout.width  = bin.readUint(data, offset);  offset += 4;\n\tout.height = bin.readUint(data, offset);  offset += 4;\n\tout.depth     = data[offset];  offset++;\n\tout.ctype     = data[offset];  offset++;\n\tout.compress  = data[offset];  offset++;\n\tout.filter    = data[offset];  offset++;\n\tout.interlace = data[offset];  offset++;\n}\n\nUPNG._bin = {\n\tnextZero   : function(data,p)  {  while(data[p]!=0) p++;  return p;  },\n\treadUshort : function(buff,p)  {  return (buff[p]<< 8) | buff[p+1];  },\n\twriteUshort: function(buff,p,n){  buff[p] = (n>>8)&255;  buff[p+1] = n&255;  },\n\treadUint   : function(buff,p)  {  return (buff[p]*(256*256*256)) + ((buff[p+1]<<16) | (buff[p+2]<< 8) | buff[p+3]);  },\n\twriteUint  : function(buff,p,n){  buff[p]=(n>>24)&255;  buff[p+1]=(n>>16)&255;  buff[p+2]=(n>>8)&255;  buff[p+3]=n&255;  },\n\treadASCII  : function(buff,p,l){  var s = \"\";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },\n\twriteASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },\n\treadBytes  : function(buff,p,l){  var arr = [];   for(var i=0; i<l; i++) arr.push(buff[p+i]);   return arr;  },\n\tpad : function(n) { return n.length < 2 ? \"0\" + n : n; },\n\treadUTF8 : function(buff, p, l) {\n\t\tvar s = \"\", ns;\n\t\tfor(var i=0; i<l; i++) s += \"%\" + UPNG._bin.pad(buff[p+i].toString(16));\n\t\ttry {  ns = decodeURIComponent(s); }\n\t\tcatch(e) {  return UPNG._bin.readASCII(buff, p, l);  }\n\t\treturn  ns;\n\t}\n}\nUPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode)\n{\n\tvar w = Math.min(sw,tw), h = Math.min(sh,th);\n\tvar si=0, ti=0;\n\tfor(var y=0; y<h; y++)\n\t\tfor(var x=0; x<w; x++)\n\t\t{\n\t\t\tif(xoff>=0 && yoff>=0) {  si = (y*sw+x)<<2;  ti = (( yoff+y)*tw+xoff+x)<<2;  }\n\t\t\telse                   {  si = ((-yoff+y)*sw-xoff+x)<<2;  ti = (y*tw+x)<<2;  }\n\t\t\t\n\t\t\tif     (mode==0) {  tb[ti] = sb[si];  tb[ti+1] = sb[si+1];  tb[ti+2] = sb[si+2];  tb[ti+3] = sb[si+3];  }\n\t\t\telse if(mode==1) {\n\t\t\t\tvar fa = sb[si+3]*(1/255), fr=sb[si]*fa, fg=sb[si+1]*fa, fb=sb[si+2]*fa; \n\t\t\t\tvar ba = tb[ti+3]*(1/255), br=tb[ti]*ba, bg=tb[ti+1]*ba, bb=tb[ti+2]*ba; \n\t\t\t\t\n\t\t\t\tvar ifa=1-fa, oa = fa+ba*ifa, ioa = (oa==0?0:1/oa);\n\t\t\t\ttb[ti+3] = 255*oa;  \n\t\t\t\ttb[ti+0] = (fr+br*ifa)*ioa;  \n\t\t\t\ttb[ti+1] = (fg+bg*ifa)*ioa;   \n\t\t\t\ttb[ti+2] = (fb+bb*ifa)*ioa;  \n\t\t\t}\n\t\t\telse if(mode==2){\t// copy only differences, otherwise zero\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) {  tb[ti]=0;  tb[ti+1]=0;  tb[ti+2]=0;  tb[ti+3]=0;  }\n\t\t\t\telse {  tb[ti]=fr;  tb[ti+1]=fg;  tb[ti+2]=fb;  tb[ti+3]=fa;  }\n\t\t\t}\n\t\t\telse if(mode==3){\t// check if can be blended\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif(fa<220 && ba>20) return false;\n\t\t\t}\n\t\t}\n\treturn true;\n}\n\n\n\n\nUPNG.encode = function(bufs, w, h, ps, dels, tabs, forbidPlte)\n{\n\tif(ps==null) ps=0;\n\tif(forbidPlte==null) forbidPlte = false;\n\n\tvar nimg = UPNG.encode.compress(bufs, w, h, ps, [false, false, false, 0, forbidPlte]);\n\tUPNG.encode.compressPNG(nimg, -1);\n\t\n\treturn UPNG.encode._main(nimg, w, h, dels, tabs);\n}\n\nUPNG.encodeLL = function(bufs, w, h, cc, ac, depth, dels, tabs) {\n\tvar nimg = {  ctype: 0 + (cc==1 ? 0 : 2) + (ac==0 ? 0 : 4),      depth: depth,  frames: []  };\n\t\n\tvar time = Date.now();\n\tvar bipp = (cc+ac)*depth, bipl = bipp * w;\n\tfor(var i=0; i<bufs.length; i++)\n\t\tnimg.frames.push({  rect:{x:0,y:0,width:w,height:h},  img:new Uint8Array(bufs[i]), blend:0, dispose:1, bpp:Math.ceil(bipp/8), bpl:Math.ceil(bipl/8)  });\n\t\n\tUPNG.encode.compressPNG(nimg, 0, true);\n\t\n\tvar out = UPNG.encode._main(nimg, w, h, dels, tabs);\n\treturn out;\n}\n\nUPNG.encode._main = function(nimg, w, h, dels, tabs) {\n\tif(tabs==null) tabs={};\n\tvar crc = UPNG.crc.crc, wUi = UPNG._bin.writeUint, wUs = UPNG._bin.writeUshort, wAs = UPNG._bin.writeASCII;\n\tvar offset = 8, anim = nimg.frames.length>1, pltAlpha = false;\n\t\n\tvar leng = 8 + (16+5+4) /*+ (9+4)*/ + (anim ? 20 : 0);\n\tif(tabs[\"sRGB\"]!=null) leng += 8+1+4;\n\tif(tabs[\"pHYs\"]!=null) leng += 8+9+4;\n\tif(nimg.ctype==3) {\n\t\tvar dl = nimg.plte.length;\n\t\tfor(var i=0; i<dl; i++) if((nimg.plte[i]>>>24)!=255) pltAlpha = true;\n\t\tleng += (8 + dl*3 + 4) + (pltAlpha ? (8 + dl*1 + 4) : 0);\n\t}\n\tfor(var j=0; j<nimg.frames.length; j++)\n\t{\n\t\tvar fr = nimg.frames[j];\n\t\tif(anim) leng += 38;\n\t\tleng += fr.cimg.length + 12;\n\t\tif(j!=0) leng+=4;\n\t}\n\tleng += 12; \n\t\n\tvar data = new Uint8Array(leng);\n\tvar wr=[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) data[i]=wr[i];\n\t\n\twUi(data,offset, 13);     offset+=4;\n\twAs(data,offset,\"IHDR\");  offset+=4;\n\twUi(data,offset,w);  offset+=4;\n\twUi(data,offset,h);  offset+=4;\n\tdata[offset] = nimg.depth;  offset++;  // depth\n\tdata[offset] = nimg.ctype;  offset++;  // ctype\n\tdata[offset] = 0;  offset++;  // compress\n\tdata[offset] = 0;  offset++;  // filter\n\tdata[offset] = 0;  offset++;  // interlace\n\twUi(data,offset,crc(data,offset-17,17));  offset+=4; // crc\n\n\t// 13 bytes to say, that it is sRGB\n\tif(tabs[\"sRGB\"]!=null) {\n\t\twUi(data,offset, 1);      offset+=4;\n\t\twAs(data,offset,\"sRGB\");  offset+=4;\n\t\tdata[offset] = tabs[\"sRGB\"];  offset++;\n\t\twUi(data,offset,crc(data,offset-5,5));  offset+=4; // crc\n\t}\n\tif(tabs[\"pHYs\"]!=null) {\n\t\twUi(data,offset, 9);      offset+=4;\n\t\twAs(data,offset,\"pHYs\");  offset+=4;\n\t\twUi(data,offset, tabs[\"pHYs\"][0]);      offset+=4;\n\t\twUi(data,offset, tabs[\"pHYs\"][1]);      offset+=4;\n\t\tdata[offset]=tabs[\"pHYs\"][2];\t\t\toffset++;\n\t\twUi(data,offset,crc(data,offset-13,13));  offset+=4; // crc\n\t}\n\n\tif(anim) {\n\t\twUi(data,offset, 8);      offset+=4;\n\t\twAs(data,offset,\"acTL\");  offset+=4;\n\t\twUi(data,offset, nimg.frames.length);     offset+=4;\n\t\twUi(data,offset, tabs[\"loop\"]!=null?tabs[\"loop\"]:0);      offset+=4;\n\t\twUi(data,offset,crc(data,offset-12,12));  offset+=4; // crc\n\t}\n\n\tif(nimg.ctype==3) {\n\t\tvar dl = nimg.plte.length;\n\t\twUi(data,offset, dl*3);  offset+=4;\n\t\twAs(data,offset,\"PLTE\");  offset+=4;\n\t\tfor(var i=0; i<dl; i++){\n\t\t\tvar ti=i*3, c=nimg.plte[i], r=(c)&255, g=(c>>>8)&255, b=(c>>>16)&255;\n\t\t\tdata[offset+ti+0]=r;  data[offset+ti+1]=g;  data[offset+ti+2]=b;\n\t\t}\n\t\toffset+=dl*3;\n\t\twUi(data,offset,crc(data,offset-dl*3-4,dl*3+4));  offset+=4; // crc\n\n\t\tif(pltAlpha) {\n\t\t\twUi(data,offset, dl);  offset+=4;\n\t\t\twAs(data,offset,\"tRNS\");  offset+=4;\n\t\t\tfor(var i=0; i<dl; i++)  data[offset+i]=(nimg.plte[i]>>>24)&255;\n\t\t\toffset+=dl;\n\t\t\twUi(data,offset,crc(data,offset-dl-4,dl+4));  offset+=4; // crc\n\t\t}\n\t}\n\t\n\tvar fi = 0;\n\tfor(var j=0; j<nimg.frames.length; j++)\n\t{\n\t\tvar fr = nimg.frames[j];\n\t\tif(anim) {\n\t\t\twUi(data, offset, 26);     offset+=4;\n\t\t\twAs(data, offset,\"fcTL\");  offset+=4;\n\t\t\twUi(data, offset, fi++);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.width );   offset+=4;\n\t\t\twUi(data, offset, fr.rect.height);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.x);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.y);   offset+=4;\n\t\t\twUs(data, offset, dels[j]);   offset+=2;\n\t\t\twUs(data, offset,  1000);   offset+=2;\n\t\t\tdata[offset] = fr.dispose;  offset++;\t// dispose\n\t\t\tdata[offset] = fr.blend  ;  offset++;\t// blend\n\t\t\twUi(data,offset,crc(data,offset-30,30));  offset+=4; // crc\n\t\t}\n\t\t\t\t\n\t\tvar imgd = fr.cimg, dl = imgd.length;\n\t\twUi(data,offset, dl+(j==0?0:4));     offset+=4;\n\t\tvar ioff = offset;\n\t\twAs(data,offset,(j==0)?\"IDAT\":\"fdAT\");  offset+=4;\n\t\tif(j!=0) {  wUi(data, offset, fi++);  offset+=4;  }\n\t\tdata.set(imgd,offset);\n\t\toffset += dl;\n\t\twUi(data,offset,crc(data,ioff,offset-ioff));  offset+=4; // crc\n\t}\n\n\twUi(data,offset, 0);     offset+=4;\n\twAs(data,offset,\"IEND\");  offset+=4;\n\twUi(data,offset,crc(data,offset-4,4));  offset+=4; // crc\n\n\treturn data.buffer;\n}\n\nUPNG.encode.compressPNG = function(out, filter, levelZero) {\n\tfor(var i=0; i<out.frames.length; i++) {\n\t\tvar frm = out.frames[i], nw=frm.rect.width, nh=frm.rect.height;\n\t\tvar fdata = new Uint8Array(nh*frm.bpl+nh);\n\t\tfrm.cimg = UPNG.encode._filterZero(frm.img,nh,frm.bpp,frm.bpl,fdata, filter, levelZero);\n\t}\n}\n\n\n\nUPNG.encode.compress = function(bufs, w, h, ps, prms) // prms:  onlyBlend, minBits, forbidPlte\n{\n\t//var time = Date.now();\n\tvar onlyBlend = prms[0], evenCrd = prms[1], forbidPrev = prms[2], minBits = prms[3], forbidPlte = prms[4];\n\t\n\tvar ctype = 6, depth = 8, alphaAnd=255\n\t\n\tfor(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\tvar img = new Uint8Array(bufs[j]), ilen = img.length;\n\t\tfor(var i=0; i<ilen; i+=4) alphaAnd &= img[i+3];\n\t}\n\tvar gotAlpha = (alphaAnd!=255);\n\t\n\t//console.log(\"alpha check\", Date.now()-time);  time = Date.now();\n\t\n\t//var brute = gotAlpha && forGIF;\t\t// brute : frames can only be copied, not \"blended\"\n\tvar frms = UPNG.encode.framize(bufs, w, h, onlyBlend, evenCrd, forbidPrev);\n\t//console.log(\"framize\", Date.now()-time);  time = Date.now();\n\t\n\tvar cmap={}, plte=[], inds=[];  \n\t\n\tif(ps!=0) {\n\t\tvar nbufs = [];  for(var i=0; i<frms.length; i++) nbufs.push(frms[i].img.buffer);\n\t\t\n\t\tvar abuf = UPNG.encode.concatRGBA(nbufs), qres = UPNG.quantize(abuf, ps);  \n\t\tvar cof = 0, bb = new Uint8Array(qres.abuf);\n\t\tfor(var i=0; i<frms.length; i++) {  var ti=frms[i].img, bln=ti.length;  inds.push(new Uint8Array(qres.inds.buffer, cof>>2, bln>>2));\n\t\t\tfor(var j=0; j<bln; j+=4) {  ti[j]=bb[cof+j];  ti[j+1]=bb[cof+j+1];  ti[j+2]=bb[cof+j+2];  ti[j+3]=bb[cof+j+3];  }    cof+=bln;  }\n\t\t\n\t\tfor(var i=0; i<qres.plte.length; i++) plte.push(qres.plte[i].est.rgba);\n\t\t//console.log(\"quantize\", Date.now()-time);  time = Date.now();\n\t}\n\telse {\n\t\t// what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used\n\t\tfor(var j=0; j<frms.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\t\tvar frm = frms[j], img32 = new Uint32Array(frm.img.buffer), nw=frm.rect.width, ilen = img32.length;\n\t\t\tvar ind = new Uint8Array(ilen);  inds.push(ind);\n\t\t\tfor(var i=0; i<ilen; i++) {\n\t\t\t\tvar c = img32[i];\n\t\t\t\tif     (i!=0 && c==img32[i- 1]) ind[i]=ind[i-1];\n\t\t\t\telse if(i>nw && c==img32[i-nw]) ind[i]=ind[i-nw];\n\t\t\t\telse {\n\t\t\t\t\tvar cmc = cmap[c];\n\t\t\t\t\tif(cmc==null) {  cmap[c]=cmc=plte.length;  plte.push(c);  if(plte.length>=300) break;  }\n\t\t\t\t\tind[i]=cmc;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"make palette\", Date.now()-time);  time = Date.now();\n\t}\n\t\n\tvar cc=plte.length; //console.log(\"colors:\",cc);\n\tif(cc<=256 && forbidPlte==false) {\n\t\tif(cc<= 2) depth=1;  else if(cc<= 4) depth=2;  else if(cc<=16) depth=4;  else depth=8;\n\t\tdepth =  Math.max(depth, minBits);\n\t}\n\t\n\tfor(var j=0; j<frms.length; j++)\n\t{\n\t\tvar frm = frms[j], nx=frm.rect.x, ny=frm.rect.y, nw=frm.rect.width, nh=frm.rect.height;\n\t\tvar cimg = frm.img, cimg32 = new Uint32Array(cimg.buffer);\n\t\tvar bpl = 4*nw, bpp=4;\n\t\tif(cc<=256 && forbidPlte==false) {\n\t\t\tbpl = Math.ceil(depth*nw/8);\n\t\t\tvar nimg = new Uint8Array(bpl*nh);\n\t\t\tvar inj = inds[j];\n\t\t\tfor(var y=0; y<nh; y++) {  var i=y*bpl, ii=y*nw;\n\t\t\t\tif     (depth==8) for(var x=0; x<nw; x++) nimg[i+(x)   ]   =  (inj[ii+x]             );\n\t\t\t\telse if(depth==4) for(var x=0; x<nw; x++) nimg[i+(x>>1)]  |=  (inj[ii+x]<<(4-(x&1)*4));\n\t\t\t\telse if(depth==2) for(var x=0; x<nw; x++) nimg[i+(x>>2)]  |=  (inj[ii+x]<<(6-(x&3)*2));\n\t\t\t\telse if(depth==1) for(var x=0; x<nw; x++) nimg[i+(x>>3)]  |=  (inj[ii+x]<<(7-(x&7)*1));\n\t\t\t}\n\t\t\tcimg=nimg;  ctype=3;  bpp=1;\n\t\t}\n\t\telse if(gotAlpha==false && frms.length==1) {\t// some next \"reduced\" frames may contain alpha for blending\n\t\t\tvar nimg = new Uint8Array(nw*nh*3), area=nw*nh;\n\t\t\tfor(var i=0; i<area; i++) { var ti=i*3, qi=i*4;  nimg[ti]=cimg[qi];  nimg[ti+1]=cimg[qi+1];  nimg[ti+2]=cimg[qi+2];  }\n\t\t\tcimg=nimg;  ctype=2;  bpp=3;  bpl=3*nw;\n\t\t}\n\t\tfrm.img=cimg;  frm.bpl=bpl;  frm.bpp=bpp;\n\t}\n\t//console.log(\"colors => palette indices\", Date.now()-time);  time = Date.now();\n\t\n\treturn {ctype:ctype, depth:depth, plte:plte, frames:frms  };\n}\nUPNG.encode.framize = function(bufs,w,h,alwaysBlend,evenCrd,forbidPrev) {\n\t/*  DISPOSE\n\t    - 0 : no change\n\t\t- 1 : clear to transparent\n\t\t- 2 : retstore to content before rendering (previous frame disposed)\n\t\tBLEND\n\t\t- 0 : replace\n\t\t- 1 : blend\n\t*/\n\tvar frms = [];\n\tfor(var j=0; j<bufs.length; j++) {\n\t\tvar cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);\n\t\tvar nimg;\n\t\t\n\t\tvar nx=0, ny=0, nw=w, nh=h, blend=alwaysBlend?1:0;\n\t\tif(j!=0) {\n\t\t\tvar tlim = (forbidPrev || alwaysBlend || j==1 || frms[j-2].dispose!=0)?1:2, tstp = 0, tarea = 1e9;\n\t\t\tfor(var it=0; it<tlim; it++)\n\t\t\t{\n\t\t\t\tvar pimg = new Uint8Array(bufs[j-1-it]), p32 = new Uint32Array(bufs[j-1-it]);\n\t\t\t\tvar mix=w,miy=h,max=-1,may=-1;\n\t\t\t\tfor(var y=0; y<h; y++) for(var x=0; x<w; x++) {\n\t\t\t\t\tvar i = y*w+x;\n\t\t\t\t\tif(cimg32[i]!=p32[i]) {\n\t\t\t\t\t\tif(x<mix) mix=x;  if(x>max) max=x;\n\t\t\t\t\t\tif(y<miy) miy=y;  if(y>may) may=y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(max==-1) mix=miy=max=may=0;\n\t\t\t\tif(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }\n\t\t\t\tvar sarea = (max-mix+1)*(may-miy+1);\n\t\t\t\tif(sarea<tarea) {\n\t\t\t\t\ttarea = sarea;  tstp = it;\n\t\t\t\t\tnx = mix; ny = miy; nw = max-mix+1; nh = may-miy+1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// alwaysBlend: pokud zjistím, že blendit nelze, nastavím předchozímu snímku dispose=1. Zajistím, aby obsahoval můj obdélník.\n\t\t\tvar pimg = new Uint8Array(bufs[j-1-tstp]);\n\t\t\tif(tstp==1) frms[j-1].dispose = 2;\n\t\t\t\n\t\t\tnimg = new Uint8Array(nw*nh*4);\n\t\t\tUPNG._copyTile(pimg,w,h, nimg,nw,nh, -nx,-ny, 0);\n\t\t\t\n\t\t\tblend =  UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 3) ? 1 : 0;\n\t\t\tif(blend==1) UPNG.encode._prepareDiff(cimg,w,h,nimg,{x:nx,y:ny,width:nw,height:nh});\n\t\t\telse         UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 0);\n\t\t\t//UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, blend==1?2:0);\n\t\t}\n\t\telse nimg = cimg.slice(0);\t// img may be rewritten further ... don't rewrite input\n\t\t\n\t\tfrms.push({rect:{x:nx,y:ny,width:nw,height:nh}, img:nimg, blend:blend, dispose:0});\n\t}\n\t\n\t\n\tif(alwaysBlend) for(var j=0; j<frms.length; j++) {\n\t\tvar frm = frms[j];  if(frm.blend==1) continue;\n\t\tvar r0 = frm.rect, r1 = frms[j-1].rect\n\t\tvar miX = Math.min(r0.x, r1.x), miY = Math.min(r0.y, r1.y);\n\t\tvar maX = Math.max(r0.x+r0.width, r1.x+r1.width), maY = Math.max(r0.y+r0.height, r1.y+r1.height);\n\t\tvar r = {x:miX, y:miY, width:maX-miX, height:maY-miY};\n\t\t\n\t\tfrms[j-1].dispose = 1;\n\t\tif(j-1!=0) \n\t\tUPNG.encode._updateFrame(bufs, w,h,frms, j-1,r, evenCrd);\n\t\tUPNG.encode._updateFrame(bufs, w,h,frms, j  ,r, evenCrd);\n\t}\n\tvar area = 0;\n\tif(bufs.length!=1) for(var i=0; i<frms.length; i++) {\n\t\tvar frm = frms[i];\n\t\tarea += frm.rect.width*frm.rect.height;\n\t\t//if(i==0 || frm.blend!=1) continue;\n\t\t//var ob = new Uint8Array(\n\t\t//console.log(frm.blend, frm.dispose, frm.rect);\n\t}\n\t//if(area!=0) console.log(area);\n\treturn frms;\n}\nUPNG.encode._updateFrame = function(bufs, w,h, frms, i, r, evenCrd) {\n\tvar U8 = Uint8Array, U32 = Uint32Array;\n\tvar pimg = new U8(bufs[i-1]), pimg32 = new U32(bufs[i-1]), nimg = i+1<bufs.length ? new U8(bufs[i+1]):null;\n\tvar cimg = new U8(bufs[i]), cimg32 = new U32(cimg.buffer);\n\t\n\tvar mix=w,miy=h,max=-1,may=-1;\n\tfor(var y=0; y<r.height; y++) for(var x=0; x<r.width; x++) {\n\t\tvar cx = r.x+x, cy = r.y+y;\n\t\tvar j = cy*w+cx, cc = cimg32[j];\n\t\t// no need to draw transparency, or to dispose it. Or, if writing the same color and the next one does not need transparency.\n\t\tif(cc==0 || (frms[i-1].dispose==0 && pimg32[j]==cc && (nimg==null || nimg[j*4+3]!=0))/**/) {}\n\t\telse {\n\t\t\tif(cx<mix) mix=cx;  if(cx>max) max=cx;\n\t\t\tif(cy<miy) miy=cy;  if(cy>may) may=cy;\n\t\t}\n\t}\n\tif(max==-1) mix=miy=max=may=0;\n\tif(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }\n\tr = {x:mix, y:miy, width:max-mix+1, height:may-miy+1};\n\t\n\tvar fr = frms[i];  fr.rect = r;  fr.blend = 1;  fr.img = new Uint8Array(r.width*r.height*4);\n\tif(frms[i-1].dispose==0) {\n\t\tUPNG._copyTile(pimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);\n\t\tUPNG.encode._prepareDiff(cimg,w,h,fr.img,r);\n\t\t//UPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 2);\n\t}\n\telse\n\t\tUPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);\n}\nUPNG.encode._prepareDiff = function(cimg, w,h, nimg, rec) {\n\tUPNG._copyTile(cimg,w,h, nimg,rec.width,rec.height, -rec.x,-rec.y, 2);\n\t/*\n\tvar n32 = new Uint32Array(nimg.buffer);\n\tvar og = new Uint8Array(rec.width*rec.height*4), o32 = new Uint32Array(og.buffer);\n\tUPNG._copyTile(cimg,w,h, og,rec.width,rec.height, -rec.x,-rec.y, 0);\n\tfor(var i=4; i<nimg.length; i+=4) {\n\t\tif(nimg[i-1]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)-1]) {\n\t\t\tn32[i>>>2]=o32[i>>>2];\n\t\t\t//var j = i, c=p32[(i>>>2)-1];\n\t\t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n\t\t}\n\t}\n\tfor(var i=nimg.length-8; i>0; i-=4) {\n\t\tif(nimg[i+7]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)+1]) {\n\t\t\tn32[i>>>2]=o32[i>>>2];\n\t\t\t//var j = i, c=p32[(i>>>2)-1];\n\t\t\t//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }\n\t\t}\n\t}*/\n}\n\nUPNG.encode._filterZero = function(img,h,bpp,bpl,data, filter, levelZero)\n{\n\tvar fls = [], ftry=[0,1,2,3,4];\n\tif     (filter!=-1)             ftry=[filter];\n\telse if(h*bpl>500000 || bpp==1) ftry=[0];\n\tvar opts;  if(levelZero) opts={level:0};\n\t\n\tvar CMPR = (levelZero && UZIP!=null) ? UZIP : pako;\n\t\n\tfor(var i=0; i<ftry.length; i++) {\n\t\tfor(var y=0; y<h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, ftry[i]);\n\t\t//var nimg = new Uint8Array(data.length);\n\t\t//var sz = UZIP.F.deflate(data, nimg);  fls.push(nimg.slice(0,sz));\n\t\t//var dfl = pako[\"deflate\"](data), dl=dfl.length-4;\n\t\t//var crc = (dfl[dl+3]<<24)|(dfl[dl+2]<<16)|(dfl[dl+1]<<8)|(dfl[dl+0]<<0);\n\t\t//console.log(crc, UZIP.adler(data,2,data.length-6));\n\t\tfls.push(CMPR[\"deflate\"](data,opts));\n\t}\n\tvar ti, tsize=1e9;\n\tfor(var i=0; i<fls.length; i++) if(fls[i].length<tsize) {  ti=i;  tsize=fls[i].length;  }\n\treturn fls[ti];\n}\nUPNG.encode._filterLine = function(data, img, y, bpl, bpp, type)\n{\n\tvar i = y*bpl, di = i+y, paeth = UPNG.decode._paeth\n\tdata[di]=type;  di++;\n\n\tif(type==0) {\n\t\tif(bpl<500) for(var x=0; x<bpl; x++) data[di+x] = img[i+x];\n\t\telse data.set(new Uint8Array(img.buffer,i,bpl),di);\n\t}\n\telse if(type==1) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] =  img[i+x];\n\t\tfor(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]-img[i+x-bpp]+256)&255;\n\t}\n\telse if(y==0) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] = img[i+x];\n\n\t\tif(type==2) for(var x=bpp; x<bpl; x++) data[di+x] = img[i+x];\n\t\tif(type==3) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - (img[i+x-bpp]>>1) +256)&255;\n\t\tif(type==4) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - paeth(img[i+x-bpp], 0, 0) +256)&255;\n\t}\n\telse {\n\t\tif(type==2) { for(var x=  0; x<bpl; x++) data[di+x] = (img[i+x]+256 - img[i+x-bpl])&255;  }\n\t\tif(type==3) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - (img[i+x-bpl]>>1))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - ((img[i+x-bpl]+img[i+x-bpp])>>1))&255;  }\n\t\tif(type==4) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - paeth(0, img[i+x-bpl], 0))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - paeth(img[i+x-bpp], img[i+x-bpl], img[i+x-bpp-bpl]))&255;  }\n\t}\n}\n\nUPNG.crc = {\n\ttable : ( function() {\n\t   var tab = new Uint32Array(256);\n\t   for (var n=0; n<256; n++) {\n\t\t\tvar c = n;\n\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\tif (c & 1)  c = 0xedb88320 ^ (c >>> 1);\n\t\t\t\telse        c = c >>> 1;\n\t\t\t}\n\t\t\ttab[n] = c;  }\n\t\treturn tab;  })(),\n\tupdate : function(c, buf, off, len) {\n\t\tfor (var i=0; i<len; i++)  c = UPNG.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);\n\t\treturn c;\n\t},\n\tcrc : function(b,o,l)  {  return UPNG.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }\n}\n\n\nUPNG.quantize = function(abuf, ps)\n{\t\n\tvar oimg = new Uint8Array(abuf), nimg = oimg.slice(0), nimg32 = new Uint32Array(nimg.buffer);\n\t\n\tvar KD = UPNG.quantize.getKDtree(nimg, ps);\n\tvar root = KD[0], leafs = KD[1];\n\t\n\tvar planeDst = UPNG.quantize.planeDst;\n\tvar sb = oimg, tb = nimg32, len=sb.length;\n\t\t\n\tvar inds = new Uint8Array(oimg.length>>2);\n\tfor(var i=0; i<len; i+=4) {\n\t\tvar r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);\n\t\t\n\t\t//  exact, but too slow :(\n\t\tvar nd = UPNG.quantize.getNearest(root, r, g, b, a);\n\t\t//var nd = root;\n\t\t//while(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;\n\t\t\n\t\tinds[i>>2] = nd.ind;\n\t\ttb[i>>2] = nd.est.rgba;\n\t}\n\treturn {  abuf:nimg.buffer, inds:inds, plte:leafs  };\n}\n\nUPNG.quantize.getKDtree = function(nimg, ps, err) {\n\tif(err==null) err = 0.0001;\n\tvar nimg32 = new Uint32Array(nimg.buffer);\n\t\n\tvar root = {i0:0, i1:nimg.length, bst:null, est:null, tdst:0, left:null, right:null };  // basic statistic, extra statistic\n\troot.bst = UPNG.quantize.stats(  nimg,root.i0, root.i1  );  root.est = UPNG.quantize.estats( root.bst );\n\tvar leafs = [root];\n\t\n\twhile(leafs.length<ps)\n\t{\n\t\tvar maxL = 0, mi=0;\n\t\tfor(var i=0; i<leafs.length; i++) if(leafs[i].est.L > maxL) {  maxL=leafs[i].est.L;  mi=i;  }\n\t\tif(maxL<err) break;\n\t\tvar node = leafs[mi];\n\t\t\n\t\tvar s0 = UPNG.quantize.splitPixels(nimg,nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);\n\t\tvar s0wrong = (node.i0>=s0 || node.i1<=s0);\n\t\t//console.log(maxL, leafs.length, mi);\n\t\tif(s0wrong) {  node.est.L=0;  continue;  }\n\t\t\n\t\t\n\t\tvar ln = {i0:node.i0, i1:s0, bst:null, est:null, tdst:0, left:null, right:null };  ln.bst = UPNG.quantize.stats( nimg, ln.i0, ln.i1 );  \n\t\tln.est = UPNG.quantize.estats( ln.bst );\n\t\tvar rn = {i0:s0, i1:node.i1, bst:null, est:null, tdst:0, left:null, right:null };  rn.bst = {R:[], m:[], N:node.bst.N-ln.bst.N};\n\t\tfor(var i=0; i<16; i++) rn.bst.R[i] = node.bst.R[i]-ln.bst.R[i];\n\t\tfor(var i=0; i< 4; i++) rn.bst.m[i] = node.bst.m[i]-ln.bst.m[i];\n\t\trn.est = UPNG.quantize.estats( rn.bst );\n\t\t\n\t\tnode.left = ln;  node.right = rn;\n\t\tleafs[mi]=ln;  leafs.push(rn);\n\t}\n\tleafs.sort(function(a,b) {  return b.bst.N-a.bst.N;  });\n\tfor(var i=0; i<leafs.length; i++) leafs[i].ind=i;\n\treturn [root, leafs];\n}\n\nUPNG.quantize.getNearest = function(nd, r,g,b,a)\n{\n\tif(nd.left==null) {  nd.tdst = UPNG.quantize.dist(nd.est.q,r,g,b,a);  return nd;  }\n\tvar planeDst = UPNG.quantize.planeDst(nd.est,r,g,b,a);\n\t\n\tvar node0 = nd.left, node1 = nd.right;\n\tif(planeDst>0) {  node0=nd.right;  node1=nd.left;  }\n\t\n\tvar ln = UPNG.quantize.getNearest(node0, r,g,b,a);\n\tif(ln.tdst<=planeDst*planeDst) return ln;\n\tvar rn = UPNG.quantize.getNearest(node1, r,g,b,a);\n\treturn rn.tdst<ln.tdst ? rn : ln;\n}\nUPNG.quantize.planeDst = function(est, r,g,b,a) {  var e = est.e;  return e[0]*r + e[1]*g + e[2]*b + e[3]*a - est.eMq;  }\nUPNG.quantize.dist     = function(q,   r,g,b,a) {  var d0=r-q[0], d1=g-q[1], d2=b-q[2], d3=a-q[3];  return d0*d0+d1*d1+d2*d2+d3*d3;  }\n\nUPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq)\n{\n\tvar vecDot = UPNG.quantize.vecDot;\n\ti1-=4;\n\tvar shfs = 0;\n\twhile(i0<i1)\n\t{\n\t\twhile(vecDot(nimg, i0, e)<=eMq) i0+=4;\n\t\twhile(vecDot(nimg, i1, e)> eMq) i1-=4;\n\t\tif(i0>=i1) break;\n\t\t\n\t\tvar t = nimg32[i0>>2];  nimg32[i0>>2] = nimg32[i1>>2];  nimg32[i1>>2]=t;\n\t\t\n\t\ti0+=4;  i1-=4;\n\t}\n\twhile(vecDot(nimg, i0, e)>eMq) i0-=4;\n\treturn i0+4;\n}\nUPNG.quantize.vecDot = function(nimg, i, e)\n{\n\treturn nimg[i]*e[0] + nimg[i+1]*e[1] + nimg[i+2]*e[2] + nimg[i+3]*e[3];\n}\nUPNG.quantize.stats = function(nimg, i0, i1){\n\tvar R = [0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0];\n\tvar m = [0,0,0,0];\n\tvar N = (i1-i0)>>2;\n\tfor(var i=i0; i<i1; i+=4)\n\t{\n\t\tvar r = nimg[i]*(1/255), g = nimg[i+1]*(1/255), b = nimg[i+2]*(1/255), a = nimg[i+3]*(1/255);\n\t\t//var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];\n\t\tm[0]+=r;  m[1]+=g;  m[2]+=b;  m[3]+=a;\n\t\t\n\t\tR[ 0] += r*r;  R[ 1] += r*g;  R[ 2] += r*b;  R[ 3] += r*a;  \n\t\t               R[ 5] += g*g;  R[ 6] += g*b;  R[ 7] += g*a; \n\t\t                              R[10] += b*b;  R[11] += b*a;  \n\t\t                                             R[15] += a*a;  \n\t}\n\tR[4]=R[1];  R[8]=R[2];  R[9]=R[6];  R[12]=R[3];  R[13]=R[7];  R[14]=R[11];\n\t\n\treturn {R:R, m:m, N:N};\n}\nUPNG.quantize.estats = function(stats){\n\tvar R = stats.R, m = stats.m, N = stats.N;\n\t\n\t// when all samples are equal, but N is large (millions), the Rj can be non-zero ( 0.0003.... - precission error)\n\tvar m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = (N==0 ? 0 : 1/N);\n\tvar Rj = [\n\t\tR[ 0] - m0*m0*iN,  R[ 1] - m0*m1*iN,  R[ 2] - m0*m2*iN,  R[ 3] - m0*m3*iN,  \n\t\tR[ 4] - m1*m0*iN,  R[ 5] - m1*m1*iN,  R[ 6] - m1*m2*iN,  R[ 7] - m1*m3*iN,\n\t\tR[ 8] - m2*m0*iN,  R[ 9] - m2*m1*iN,  R[10] - m2*m2*iN,  R[11] - m2*m3*iN,  \n\t\tR[12] - m3*m0*iN,  R[13] - m3*m1*iN,  R[14] - m3*m2*iN,  R[15] - m3*m3*iN \n\t];\n\t\n\tvar A = Rj, M = UPNG.M4;\n\tvar b = [0.5,0.5,0.5,0.5], mi = 0, tmi = 0;\n\t\n\tif(N!=0)\n\tfor(var i=0; i<10; i++) {\n\t\tb = M.multVec(A, b);  tmi = Math.sqrt(M.dot(b,b));  b = M.sml(1/tmi,  b);\n\t\tif(Math.abs(tmi-mi)<1e-9) break;  mi = tmi;\n\t}\t\n\t//b = [0,0,1,0];  mi=N;\n\tvar q = [m0*iN, m1*iN, m2*iN, m3*iN];\n\tvar eMq255 = M.dot(M.sml(255,q),b);\n\t\n\treturn {  Cov:Rj, q:q, e:b, L:mi,  eMq255:eMq255, eMq : M.dot(b,q),\n\t\t\t\trgba: (((Math.round(255*q[3])<<24) | (Math.round(255*q[2])<<16) |  (Math.round(255*q[1])<<8) | (Math.round(255*q[0])<<0))>>>0)  };\n}\nUPNG.M4 = {\n\tmultVec : function(m,v) {\n\t\t\treturn [\n\t\t\t\tm[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2] + m[ 3]*v[3],\n\t\t\t\tm[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2] + m[ 7]*v[3],\n\t\t\t\tm[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2] + m[11]*v[3],\n\t\t\t\tm[12]*v[0] + m[13]*v[1] + m[14]*v[2] + m[15]*v[3]\n\t\t\t];\n\t},\n\tdot : function(x,y) {  return  x[0]*y[0]+x[1]*y[1]+x[2]*y[2]+x[3]*y[3];  },\n\tsml : function(a,y) {  return [a*y[0],a*y[1],a*y[2],a*y[3]];  }\n}\n\nUPNG.encode.concatRGBA = function(bufs) {\n\tvar tlen = 0;\n\tfor(var i=0; i<bufs.length; i++) tlen += bufs[i].byteLength;\n\tvar nimg = new Uint8Array(tlen), noff=0;\n\tfor(var i=0; i<bufs.length; i++) {\n\t\tvar img = new Uint8Array(bufs[i]), il = img.length;\n\t\tfor(var j=0; j<il; j+=4) {  \n\t\t\tvar r=img[j], g=img[j+1], b=img[j+2], a = img[j+3];\n\t\t\tif(a==0) r=g=b=0;\n\t\t\tnimg[noff+j]=r;  nimg[noff+j+1]=g;  nimg[noff+j+2]=b;  nimg[noff+j+3]=a;  }\n\t\tnoff += il;\n\t}\n\treturn nimg.buffer;\n}\n\nexport default UPNG;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
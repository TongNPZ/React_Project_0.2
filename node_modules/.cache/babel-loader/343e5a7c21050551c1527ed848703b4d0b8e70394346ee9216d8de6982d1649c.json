{"ast":null,"code":"/* tslint:disable max-classes-per-file */\nimport { decompressJson, padStart } from './utils';\nimport AllEncodingsCompressed from './all-encodings.compressed.json';\nvar decompressedEncodings = decompressJson(AllEncodingsCompressed);\nvar allUnicodeMappings = JSON.parse(decompressedEncodings);\nvar Encoding = /** @class */function () {\n  function Encoding(name, unicodeMappings) {\n    var _this = this;\n    this.canEncodeUnicodeCodePoint = function (codePoint) {\n      return codePoint in _this.unicodeMappings;\n    };\n    this.encodeUnicodeCodePoint = function (codePoint) {\n      var mapped = _this.unicodeMappings[codePoint];\n      if (!mapped) {\n        var str = String.fromCharCode(codePoint);\n        var hexCode = \"0x\" + padStart(codePoint.toString(16), 4, '0');\n        var msg = _this.name + \" cannot encode \\\"\" + str + \"\\\" (\" + hexCode + \")\";\n        throw new Error(msg);\n      }\n      return {\n        code: mapped[0],\n        name: mapped[1]\n      };\n    };\n    this.name = name;\n    this.supportedCodePoints = Object.keys(unicodeMappings).map(Number).sort(function (a, b) {\n      return a - b;\n    });\n    this.unicodeMappings = unicodeMappings;\n  }\n  return Encoding;\n}();\nexport var Encodings = {\n  Symbol: new Encoding('Symbol', allUnicodeMappings.symbol),\n  ZapfDingbats: new Encoding('ZapfDingbats', allUnicodeMappings.zapfdingbats),\n  WinAnsi: new Encoding('WinAnsi', allUnicodeMappings.win1252)\n};","map":{"version":3,"names":["decompressJson","padStart","AllEncodingsCompressed","decompressedEncodings","allUnicodeMappings","JSON","parse","Encoding","name","unicodeMappings","_this","canEncodeUnicodeCodePoint","codePoint","encodeUnicodeCodePoint","mapped","str","String","fromCharCode","hexCode","toString","msg","Error","code","supportedCodePoints","Object","keys","map","Number","sort","a","b","Encodings","Symbol","symbol","ZapfDingbats","zapfdingbats","WinAnsi","win1252"],"sources":["C:/Users/TongNPZ/Desktop/my-app-2.0/node_modules/@pdf-lib/standard-fonts/es/Encoding.js"],"sourcesContent":["/* tslint:disable max-classes-per-file */\nimport { decompressJson, padStart } from './utils';\nimport AllEncodingsCompressed from './all-encodings.compressed.json';\nvar decompressedEncodings = decompressJson(AllEncodingsCompressed);\nvar allUnicodeMappings = JSON.parse(decompressedEncodings);\nvar Encoding = /** @class */ (function () {\n    function Encoding(name, unicodeMappings) {\n        var _this = this;\n        this.canEncodeUnicodeCodePoint = function (codePoint) {\n            return codePoint in _this.unicodeMappings;\n        };\n        this.encodeUnicodeCodePoint = function (codePoint) {\n            var mapped = _this.unicodeMappings[codePoint];\n            if (!mapped) {\n                var str = String.fromCharCode(codePoint);\n                var hexCode = \"0x\" + padStart(codePoint.toString(16), 4, '0');\n                var msg = _this.name + \" cannot encode \\\"\" + str + \"\\\" (\" + hexCode + \")\";\n                throw new Error(msg);\n            }\n            return { code: mapped[0], name: mapped[1] };\n        };\n        this.name = name;\n        this.supportedCodePoints = Object.keys(unicodeMappings)\n            .map(Number)\n            .sort(function (a, b) { return a - b; });\n        this.unicodeMappings = unicodeMappings;\n    }\n    return Encoding;\n}());\nexport var Encodings = {\n    Symbol: new Encoding('Symbol', allUnicodeMappings.symbol),\n    ZapfDingbats: new Encoding('ZapfDingbats', allUnicodeMappings.zapfdingbats),\n    WinAnsi: new Encoding('WinAnsi', allUnicodeMappings.win1252),\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAc,EAAEC,QAAQ,QAAQ,SAAS;AAClD,OAAOC,sBAAsB,MAAM,iCAAiC;AACpE,IAAIC,qBAAqB,GAAGH,cAAc,CAACE,sBAAsB,CAAC;AAClE,IAAIE,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACH,qBAAqB,CAAC;AAC1D,IAAII,QAAQ,GAAG,aAAe,YAAY;EACtC,SAASA,QAAQA,CAACC,IAAI,EAAEC,eAAe,EAAE;IACrC,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,yBAAyB,GAAG,UAAUC,SAAS,EAAE;MAClD,OAAOA,SAAS,IAAIF,KAAK,CAACD,eAAe;IAC7C,CAAC;IACD,IAAI,CAACI,sBAAsB,GAAG,UAAUD,SAAS,EAAE;MAC/C,IAAIE,MAAM,GAAGJ,KAAK,CAACD,eAAe,CAACG,SAAS,CAAC;MAC7C,IAAI,CAACE,MAAM,EAAE;QACT,IAAIC,GAAG,GAAGC,MAAM,CAACC,YAAY,CAACL,SAAS,CAAC;QACxC,IAAIM,OAAO,GAAG,IAAI,GAAGjB,QAAQ,CAACW,SAAS,CAACO,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QAC7D,IAAIC,GAAG,GAAGV,KAAK,CAACF,IAAI,GAAG,mBAAmB,GAAGO,GAAG,GAAG,MAAM,GAAGG,OAAO,GAAG,GAAG;QACzE,MAAM,IAAIG,KAAK,CAACD,GAAG,CAAC;MACxB;MACA,OAAO;QAAEE,IAAI,EAAER,MAAM,CAAC,CAAC,CAAC;QAAEN,IAAI,EAAEM,MAAM,CAAC,CAAC;MAAE,CAAC;IAC/C,CAAC;IACD,IAAI,CAACN,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACe,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAAChB,eAAe,CAAC,CAClDiB,GAAG,CAACC,MAAM,CAAC,CACXC,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAAE,OAAOD,CAAC,GAAGC,CAAC;IAAE,CAAC,CAAC;IAC5C,IAAI,CAACrB,eAAe,GAAGA,eAAe;EAC1C;EACA,OAAOF,QAAQ;AACnB,CAAC,CAAC,CAAE;AACJ,OAAO,IAAIwB,SAAS,GAAG;EACnBC,MAAM,EAAE,IAAIzB,QAAQ,CAAC,QAAQ,EAAEH,kBAAkB,CAAC6B,MAAM,CAAC;EACzDC,YAAY,EAAE,IAAI3B,QAAQ,CAAC,cAAc,EAAEH,kBAAkB,CAAC+B,YAAY,CAAC;EAC3EC,OAAO,EAAE,IAAI7B,QAAQ,CAAC,SAAS,EAAEH,kBAAkB,CAACiC,OAAO;AAC/D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TongNPZ\\\\Desktop\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Login.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = porps => {\n  _s();\n  const handleSubmit = e => {\n    // Prevent the default submit and page reload\n    e.preventDefault();\n\n    // useEffect(()) => {\n\n    // }\n    // const token = localStorage.getItem('token')\n    //   // Handle validations\n    //   axios\n    //     .post(\"http://26.90.237.200:3000/login\", { username, password }, { headers: {\"Authorization\" : `Bearer ${token}`}})\n    //     // .then((response) => localStorage.setItem(\"token\", response.data.token)) \n    //     .then(response => {\n    //       console.log(response)\n    //     })\n    //     .then(status => {\n    //       if (status == 202) {\n    //         alert('Login Success')\n    //         // localStorage.getItem('token', data.token)\n    //       }   else {\n\n    //         alert('Login failed')\n    //       }\n    //     })\n\n    const handleLogin = async () => {\n      try {\n        const response = await axios.post('http://26.90.237.200:3000/login', {\n          username,\n          password\n        });\n\n        // Extract the token from the response\n        const {\n          token\n        } = response.data;\n\n        // Save the token in your application state or localStorage\n        // For example, if you're using React state:\n        setState({\n          token\n        });\n        // or if you're using localStorage:\n        localStorage.setItem('token', token);\n\n        // Perform any additional actions, such as redirecting the user\n      } catch (error) {\n        // Handle error responses\n        console.error('Login error:', error);\n      }\n    };\n  };\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      id: \"login\",\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \" Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          name: \"username\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \" Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  //   return (\n  //   <div>\n  //   <form action=\"\" id=\"login\" method=\"post\">\n  //     <h1>Login</h1>\n  //     <p className=\"item\">\n  //       <label for=\"username\"> Username </label>\n  //       <input type=\"username\" name=\"username\" id=\"username\" />\n  //     </p>\n  //     <p className=\"item\">\n  //       <label for=\"password\"> Password </label>\n  //       <input type=\"password\" name=\"password\" id=\"password\" />\n  //     </p>\n  //     <p className=\"item\">\n  //       <input type=\"submit\" value=\"Login\" />\n  //     </p>\n  //   </form>\n  // </div>\n  //   );\n};\n_s(Login, \"GdSMZ4XJHWU/h0WUR9eJiovvCuM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Login","porps","_s","handleSubmit","e","preventDefault","handleLogin","response","post","username","password","token","data","setState","localStorage","setItem","error","console","setUsername","setPassword","children","action","id","method","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","for","type","name","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/TongNPZ/Desktop/my-app/src/components/Login/Login.js"],"sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\nimport { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = (porps) => {\r\n\r\n  const handleSubmit = e => {\r\n    // Prevent the default submit and page reload\r\n    e.preventDefault()\r\n\r\n  // useEffect(()) => {\r\n\r\n  // }\r\n  // const token = localStorage.getItem('token')\r\n  //   // Handle validations\r\n  //   axios\r\n  //     .post(\"http://26.90.237.200:3000/login\", { username, password }, { headers: {\"Authorization\" : `Bearer ${token}`}})\r\n  //     // .then((response) => localStorage.setItem(\"token\", response.data.token)) \r\n  //     .then(response => {\r\n  //       console.log(response)\r\n  //     })\r\n  //     .then(status => {\r\n  //       if (status == 202) {\r\n  //         alert('Login Success')\r\n  //         // localStorage.getItem('token', data.token)\r\n  //       }   else {\r\n     \r\n  //         alert('Login failed')\r\n  //       }\r\n  //     })\r\n\r\n\r\n\r\n      const handleLogin = async () => {\r\n        try {\r\n          const response = await axios.post('http://26.90.237.200:3000/login',  { username, password },);\r\n      \r\n          // Extract the token from the response\r\n          const { token } = response.data;\r\n      \r\n          // Save the token in your application state or localStorage\r\n          // For example, if you're using React state:\r\n          setState({ token });\r\n          // or if you're using localStorage:\r\n          localStorage.setItem('token', token);\r\n      \r\n          // Perform any additional actions, such as redirecting the user\r\n        } catch (error) {\r\n          // Handle error responses\r\n          console.error('Login error:', error);\r\n        }\r\n      };\r\n  }\r\n\r\n  const [username, setUsername] = useState()\r\n  const [password, setPassword] = useState()\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form action=\"\" id=\"login\" method=\"post\" onSubmit={handleSubmit}>\r\n        <h1>Login</h1>\r\n        <p className=\"item\">\r\n          <label for=\"username\"> Username </label>\r\n          <input\r\n            type=\"username\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </p>\r\n        <p className=\"item\">\r\n          <label for=\"password\"> Password </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </p>\r\n        <p className=\"item\">\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  //   return (\r\n  //   <div>\r\n  //   <form action=\"\" id=\"login\" method=\"post\">\r\n  //     <h1>Login</h1>\r\n  //     <p className=\"item\">\r\n  //       <label for=\"username\"> Username </label>\r\n  //       <input type=\"username\" name=\"username\" id=\"username\" />\r\n  //     </p>\r\n  //     <p className=\"item\">\r\n  //       <label for=\"password\"> Password </label>\r\n  //       <input type=\"password\" name=\"password\" id=\"password\" />\r\n  //     </p>\r\n  //     <p className=\"item\">\r\n  //       <input type=\"submit\" value=\"Login\" />\r\n  //     </p>\r\n  //   </form>\r\n  // </div>\r\n  //   );\r\n  };\r\n\r\n  export default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([['A', 7], ['a', 7], ['C', 6], ['c', 6], ['H', 1], ['h', 1], ['L', 2], ['l', 2], ['M', 2], ['m', 2], ['Q', 4], ['q', 4], ['S', 4], ['s', 4], ['T', 2], ['t', 2], ['V', 1], ['v', 1], ['Z', 0], ['z', 0]]);\nvar parse = function (path) {\n  var cmd;\n  var ret = [];\n  var args = [];\n  var curArg = '';\n  var foundDecimal = false;\n  var params = 0;\n  for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n    var c = path_1[_i];\n    if (parameters.has(c)) {\n      params = parameters.get(c);\n      if (cmd) {\n        // save existing command\n        if (curArg.length > 0) {\n          args[args.length] = +curArg;\n        }\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [];\n        curArg = '';\n        foundDecimal = false;\n      }\n      cmd = c;\n    } else if ([' ', ','].includes(c) || c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === '.' && foundDecimal) {\n      if (curArg.length === 0) {\n        continue;\n      }\n      if (args.length === params) {\n        // handle reused commands\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [+curArg];\n        // handle assumed commands\n        if (cmd === 'M') {\n          cmd = 'L';\n        }\n        if (cmd === 'm') {\n          cmd = 'l';\n        }\n      } else {\n        args[args.length] = +curArg;\n      }\n      foundDecimal = c === '.';\n      // fix for negative numbers or repeated decimals with no delimeter between commands\n      curArg = ['-', '.'].includes(c) ? c : '';\n    } else {\n      curArg += c;\n      if (c === '.') {\n        foundDecimal = true;\n      }\n    }\n  }\n  // add the last command\n  if (curArg.length > 0) {\n    if (args.length === params) {\n      // handle reused commands\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      args = [+curArg];\n      // handle assumed commands\n      if (cmd === 'M') {\n        cmd = 'L';\n      }\n      if (cmd === 'm') {\n        cmd = 'l';\n      }\n    } else {\n      args[args.length] = +curArg;\n    }\n  }\n  ret[ret.length] = {\n    cmd: cmd,\n    args: args\n  };\n  return ret;\n};\nvar apply = function (commands) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0;\n  // run the commands\n  var cmds = [];\n  for (var i = 0; i < commands.length; i++) {\n    var c = commands[i];\n    if (c.cmd && typeof runners[c.cmd] === 'function') {\n      var cmd = runners[c.cmd](c.args);\n      if (Array.isArray(cmd)) {\n        cmds = cmds.concat(cmd);\n      } else {\n        cmds.push(cmd);\n      }\n    }\n  }\n  return cmds;\n};\nvar runners = {\n  M: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  m: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  C: function (a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n  },\n  c: function (a) {\n    var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    cy += a[5];\n    return cmd;\n  },\n  S: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return cmd;\n  },\n  s: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  Q: function (a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return appendQuadraticCurve(a[0], a[1], cx, cy);\n  },\n  q: function (a) {\n    var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  T: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    cy = a[1];\n    return cmd;\n  },\n  t: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    cy += a[1];\n    return cmd;\n  },\n  A: function (a) {\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  a: function (a) {\n    a[5] += cx;\n    a[6] += cy;\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  L: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  l: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  H: function (a) {\n    cx = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  h: function (a) {\n    cx += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  V: function (a) {\n    cy = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  v: function (a) {\n    cy += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  Z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  },\n  z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  }\n};\nvar solveArc = function (x, y, coords) {\n  var rx = coords[0],\n    ry = coords[1],\n    rot = coords[2],\n    large = coords[3],\n    sweep = coords[4],\n    ex = coords[5],\n    ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  var cmds = [];\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    var bez = segmentToBezier.apply(void 0, seg);\n    cmds.push(appendBezierCurve.apply(void 0, bez));\n  }\n  return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var th = rotateX * (Math.PI / 180);\n  var sinTh = Math.sin(th);\n  var cosTh = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n  py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n  var pl = px * px / (rx * rx) + py * py / (ry * ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n  var a00 = cosTh / rx;\n  var a01 = sinTh / rx;\n  var a10 = -sinTh / ry;\n  var a11 = cosTh / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n  var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  var sfactorSq = 1 / d - 0.25;\n  if (sfactorSq < 0) {\n    sfactorSq = 0;\n  }\n  var sfactor = Math.sqrt(sfactorSq);\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  var th0 = Math.atan2(y0 - yc, x0 - xc);\n  var th1 = Math.atan2(y1 - yc, x1 - xc);\n  var thArc = th1 - th0;\n  if (thArc < 0 && sweep === 1) {\n    thArc += 2 * Math.PI;\n  } else if (thArc > 0 && sweep === 0) {\n    thArc -= 2 * Math.PI;\n  }\n  var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i = 0; i < segments; i++) {\n    var th2 = th0 + i * thArc / segments;\n    var th3 = th0 + (i + 1) * thArc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n  }\n  return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n  var a00 = cosTh * rx;\n  var a01 = -sinTh * ry;\n  var a10 = sinTh * rx;\n  var a11 = cosTh * ry;\n  var thHalf = 0.5 * (th1 - th0);\n  var t = 8 / 3 * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5) / Math.sin(thHalf);\n  var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n  var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n  var x3 = cx1 + Math.cos(th1);\n  var y3 = cy1 + Math.sin(th1);\n  var x2 = x3 + t * Math.sin(th1);\n  var y2 = y3 - t * Math.cos(th1);\n  var result = [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n  return result;\n};\nexport var svgPathToOperators = function (path) {\n  return apply(parse(path));\n};","map":{"version":3,"names":["appendBezierCurve","appendQuadraticCurve","closePath","lineTo","moveTo","cx","cy","px","py","sx","sy","parameters","Map","parse","path","cmd","ret","args","curArg","foundDecimal","params","_i","path_1","length","c","has","get","includes","apply","commands","cmds","i","runners","Array","isArray","concat","push","M","a","m","C","S","s","Q","q","T","t","A","solveArc","L","l","H","h","V","v","Z","z","x","y","coords","rx","ry","rot","large","sweep","ex","ey","segs","arcToSegments","segs_1","seg","bez","segmentToBezier","rotateX","ox","oy","th","Math","PI","sinTh","sin","cosTh","cos","abs","pl","sqrt","a00","a01","a10","a11","x0","y0","x1","y1","d","sfactorSq","sfactor","xc","yc","th0","atan2","th1","thArc","segments","ceil","result","th2","th3","cx1","cy1","thHalf","x3","y3","x2","y2","svgPathToOperators"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0\\node_modules\\pdf-lib\\src\\api\\svgPath.ts"],"sourcesContent":["// Originated from pdfkit Copyright (c) 2014 Devon Govett\r\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\r\n// MIT LICENSE\r\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\r\n\r\nimport {\r\n  appendBezierCurve,\r\n  appendQuadraticCurve,\r\n  closePath,\r\n  lineTo,\r\n  moveTo,\r\n} from 'src/api/operators';\r\nimport { PDFOperator } from 'src/core';\r\n\r\nlet cx: number = 0;\r\nlet cy: number = 0;\r\nlet px: number | null = 0;\r\nlet py: number | null = 0;\r\nlet sx: number = 0;\r\nlet sy: number = 0;\r\n\r\nconst parameters = new Map<string, number>([\r\n  ['A', 7],\r\n  ['a', 7],\r\n  ['C', 6],\r\n  ['c', 6],\r\n  ['H', 1],\r\n  ['h', 1],\r\n  ['L', 2],\r\n  ['l', 2],\r\n  ['M', 2],\r\n  ['m', 2],\r\n  ['Q', 4],\r\n  ['q', 4],\r\n  ['S', 4],\r\n  ['s', 4],\r\n  ['T', 2],\r\n  ['t', 2],\r\n  ['V', 1],\r\n  ['v', 1],\r\n  ['Z', 0],\r\n  ['z', 0],\r\n]);\r\n\r\ninterface Cmd {\r\n  cmd?: string;\r\n  args: number[];\r\n}\r\n\r\nconst parse = (path: string) => {\r\n  let cmd;\r\n  const ret: Cmd[] = [];\r\n  let args: number[] = [];\r\n  let curArg = '';\r\n  let foundDecimal = false;\r\n  let params = 0;\r\n\r\n  for (const c of path) {\r\n    if (parameters.has(c)) {\r\n      params = parameters.get(c)!;\r\n      if (cmd) {\r\n        // save existing command\r\n        if (curArg.length > 0) {\r\n          args[args.length] = +curArg;\r\n        }\r\n        ret[ret.length] = { cmd, args };\r\n\r\n        args = [];\r\n        curArg = '';\r\n        foundDecimal = false;\r\n      }\r\n\r\n      cmd = c;\r\n    } else if (\r\n      [' ', ','].includes(c) ||\r\n      (c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') ||\r\n      (c === '.' && foundDecimal)\r\n    ) {\r\n      if (curArg.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      if (args.length === params) {\r\n        // handle reused commands\r\n        ret[ret.length] = { cmd, args };\r\n        args = [+curArg];\r\n\r\n        // handle assumed commands\r\n        if (cmd === 'M') {\r\n          cmd = 'L';\r\n        }\r\n        if (cmd === 'm') {\r\n          cmd = 'l';\r\n        }\r\n      } else {\r\n        args[args.length] = +curArg;\r\n      }\r\n\r\n      foundDecimal = c === '.';\r\n\r\n      // fix for negative numbers or repeated decimals with no delimeter between commands\r\n      curArg = ['-', '.'].includes(c) ? c : '';\r\n    } else {\r\n      curArg += c;\r\n      if (c === '.') {\r\n        foundDecimal = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // add the last command\r\n  if (curArg.length > 0) {\r\n    if (args.length === params) {\r\n      // handle reused commands\r\n      ret[ret.length] = { cmd, args };\r\n      args = [+curArg];\r\n\r\n      // handle assumed commands\r\n      if (cmd === 'M') {\r\n        cmd = 'L';\r\n      }\r\n      if (cmd === 'm') {\r\n        cmd = 'l';\r\n      }\r\n    } else {\r\n      args[args.length] = +curArg;\r\n    }\r\n  }\r\n\r\n  ret[ret.length] = { cmd, args };\r\n\r\n  return ret;\r\n};\r\n\r\nconst apply = (commands: Cmd[]) => {\r\n  // current point, control point, and subpath starting point\r\n  cx = cy = px = py = sx = sy = 0;\r\n\r\n  // run the commands\r\n  let cmds: PDFOperator[] = [];\r\n  for (let i = 0; i < commands.length; i++) {\r\n    const c = commands[i];\r\n    if (c.cmd && typeof runners[c.cmd] === 'function') {\r\n      const cmd = runners[c.cmd](c.args);\r\n      if (Array.isArray(cmd)) {\r\n        cmds = cmds.concat(cmd);\r\n      } else {\r\n        cmds.push(cmd);\r\n      }\r\n    }\r\n  }\r\n  return cmds;\r\n};\r\n\r\ninterface CmdToOperatorsMap {\r\n  [cmd: string]: (a: number[]) => PDFOperator | PDFOperator[];\r\n}\r\n\r\nconst runners: CmdToOperatorsMap = {\r\n  M(a) {\r\n    cx = a[0];\r\n    cy = a[1];\r\n    px = py = null;\r\n    sx = cx;\r\n    sy = cy;\r\n    return moveTo(cx, cy);\r\n  },\r\n\r\n  m(a) {\r\n    cx += a[0];\r\n    cy += a[1];\r\n    px = py = null;\r\n    sx = cx;\r\n    sy = cy;\r\n    return moveTo(cx, cy);\r\n  },\r\n\r\n  C(a) {\r\n    cx = a[4];\r\n    cy = a[5];\r\n    px = a[2];\r\n    py = a[3];\r\n    return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\r\n  },\r\n\r\n  c(a) {\r\n    const cmd = appendBezierCurve(\r\n      a[0] + cx,\r\n      a[1] + cy,\r\n      a[2] + cx,\r\n      a[3] + cy,\r\n      a[4] + cx,\r\n      a[5] + cy,\r\n    );\r\n    px = cx + a[2];\r\n    py = cy + a[3];\r\n    cx += a[4];\r\n    cy += a[5];\r\n    return cmd;\r\n  },\r\n\r\n  S(a) {\r\n    if (px === null || py === null) {\r\n      px = cx;\r\n      py = cy;\r\n    }\r\n\r\n    const cmd = appendBezierCurve(\r\n      cx - (px - cx),\r\n      cy - (py - cy),\r\n      a[0],\r\n      a[1],\r\n      a[2],\r\n      a[3],\r\n    );\r\n    px = a[0];\r\n    py = a[1];\r\n    cx = a[2];\r\n    cy = a[3];\r\n    return cmd;\r\n  },\r\n\r\n  s(a) {\r\n    if (px === null || py === null) {\r\n      px = cx;\r\n      py = cy;\r\n    }\r\n\r\n    const cmd = appendBezierCurve(\r\n      cx - (px - cx),\r\n      cy - (py - cy),\r\n      cx + a[0],\r\n      cy + a[1],\r\n      cx + a[2],\r\n      cy + a[3],\r\n    );\r\n    px = cx + a[0];\r\n    py = cy + a[1];\r\n    cx += a[2];\r\n    cy += a[3];\r\n    return cmd;\r\n  },\r\n\r\n  Q(a) {\r\n    px = a[0];\r\n    py = a[1];\r\n    cx = a[2];\r\n    cy = a[3];\r\n    return appendQuadraticCurve(a[0], a[1], cx, cy);\r\n  },\r\n\r\n  q(a) {\r\n    const cmd = appendQuadraticCurve(\r\n      a[0] + cx,\r\n      a[1] + cy,\r\n      a[2] + cx,\r\n      a[3] + cy,\r\n    );\r\n    px = cx + a[0];\r\n    py = cy + a[1];\r\n    cx += a[2];\r\n    cy += a[3];\r\n    return cmd;\r\n  },\r\n\r\n  T(a) {\r\n    if (px === null || py === null) {\r\n      px = cx;\r\n      py = cy;\r\n    } else {\r\n      px = cx - (px - cx);\r\n      py = cy - (py - cy);\r\n    }\r\n\r\n    const cmd = appendQuadraticCurve(px, py, a[0], a[1]);\r\n    px = cx - (px - cx);\r\n    py = cy - (py - cy);\r\n    cx = a[0];\r\n    cy = a[1];\r\n    return cmd;\r\n  },\r\n\r\n  t(a) {\r\n    if (px === null || py === null) {\r\n      px = cx;\r\n      py = cy;\r\n    } else {\r\n      px = cx - (px - cx);\r\n      py = cy - (py - cy);\r\n    }\r\n\r\n    const cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\r\n    cx += a[0];\r\n    cy += a[1];\r\n    return cmd;\r\n  },\r\n\r\n  A(a) {\r\n    const cmds = solveArc(cx, cy, a);\r\n    cx = a[5];\r\n    cy = a[6];\r\n    return cmds;\r\n  },\r\n\r\n  a(a) {\r\n    a[5] += cx;\r\n    a[6] += cy;\r\n    const cmds = solveArc(cx, cy, a);\r\n    cx = a[5];\r\n    cy = a[6];\r\n    return cmds;\r\n  },\r\n\r\n  L(a) {\r\n    cx = a[0];\r\n    cy = a[1];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  l(a) {\r\n    cx += a[0];\r\n    cy += a[1];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  H(a) {\r\n    cx = a[0];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  h(a) {\r\n    cx += a[0];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  V(a) {\r\n    cy = a[0];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  v(a) {\r\n    cy += a[0];\r\n    px = py = null;\r\n    return lineTo(cx, cy);\r\n  },\r\n\r\n  Z() {\r\n    const cmd = closePath();\r\n    cx = sx;\r\n    cy = sy;\r\n    return cmd;\r\n  },\r\n\r\n  z() {\r\n    const cmd = closePath();\r\n    cx = sx;\r\n    cy = sy;\r\n    return cmd;\r\n  },\r\n};\r\n\r\nconst solveArc = (x: number, y: number, coords: number[]) => {\r\n  const [rx, ry, rot, large, sweep, ex, ey] = coords;\r\n  const segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\r\n\r\n  const cmds: PDFOperator[] = [];\r\n  for (const seg of segs) {\r\n    const bez = segmentToBezier(...seg);\r\n    cmds.push(appendBezierCurve(...bez));\r\n  }\r\n  return cmds;\r\n};\r\n\r\ntype Segment = [number, number, number, number, number, number, number, number];\r\ntype Bezier = [number, number, number, number, number, number];\r\n\r\n// from Inkscape svgtopdf, thanks!\r\nconst arcToSegments = (\r\n  x: number,\r\n  y: number,\r\n  rx: number,\r\n  ry: number,\r\n  large: number,\r\n  sweep: number,\r\n  rotateX: number,\r\n  ox: number,\r\n  oy: number,\r\n) => {\r\n  const th = rotateX * (Math.PI / 180);\r\n  const sinTh = Math.sin(th);\r\n  const cosTh = Math.cos(th);\r\n  rx = Math.abs(rx);\r\n  ry = Math.abs(ry);\r\n  px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\r\n  py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\r\n  let pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\r\n  if (pl > 1) {\r\n    pl = Math.sqrt(pl);\r\n    rx *= pl;\r\n    ry *= pl;\r\n  }\r\n\r\n  const a00 = cosTh / rx;\r\n  const a01 = sinTh / rx;\r\n  const a10 = -sinTh / ry;\r\n  const a11 = cosTh / ry;\r\n  const x0 = a00 * ox + a01 * oy;\r\n  const y0 = a10 * ox + a11 * oy;\r\n  const x1 = a00 * x + a01 * y;\r\n  const y1 = a10 * x + a11 * y;\r\n\r\n  const d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\r\n  let sfactorSq = 1 / d - 0.25;\r\n  if (sfactorSq < 0) {\r\n    sfactorSq = 0;\r\n  }\r\n  let sfactor = Math.sqrt(sfactorSq);\r\n  if (sweep === large) {\r\n    sfactor = -sfactor;\r\n  }\r\n\r\n  const xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\r\n  const yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\r\n\r\n  const th0 = Math.atan2(y0 - yc, x0 - xc);\r\n  const th1 = Math.atan2(y1 - yc, x1 - xc);\r\n\r\n  let thArc = th1 - th0;\r\n  if (thArc < 0 && sweep === 1) {\r\n    thArc += 2 * Math.PI;\r\n  } else if (thArc > 0 && sweep === 0) {\r\n    thArc -= 2 * Math.PI;\r\n  }\r\n\r\n  const segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\r\n  const result: Segment[] = [];\r\n\r\n  for (let i = 0; i < segments; i++) {\r\n    const th2 = th0 + (i * thArc) / segments;\r\n    const th3 = th0 + ((i + 1) * thArc) / segments;\r\n    result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst segmentToBezier = (\r\n  cx1: number,\r\n  cy1: number,\r\n  th0: number,\r\n  th1: number,\r\n  rx: number,\r\n  ry: number,\r\n  sinTh: number,\r\n  cosTh: number,\r\n) => {\r\n  const a00 = cosTh * rx;\r\n  const a01 = -sinTh * ry;\r\n  const a10 = sinTh * rx;\r\n  const a11 = cosTh * ry;\r\n\r\n  const thHalf = 0.5 * (th1 - th0);\r\n  const t =\r\n    ((8 / 3) * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5)) /\r\n    Math.sin(thHalf);\r\n  const x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\r\n  const y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\r\n  const x3 = cx1 + Math.cos(th1);\r\n  const y3 = cy1 + Math.sin(th1);\r\n  const x2 = x3 + t * Math.sin(th1);\r\n  const y2 = y3 - t * Math.cos(th1);\r\n\r\n  const result: Bezier = [\r\n    a00 * x1 + a01 * y1,\r\n    a10 * x1 + a11 * y1,\r\n    a00 * x2 + a01 * y2,\r\n    a10 * x2 + a11 * y2,\r\n    a00 * x3 + a01 * y3,\r\n    a10 * x3 + a11 * y3,\r\n  ];\r\n  return result;\r\n};\r\n\r\nexport const svgPathToOperators = (path: string) => apply(parse(path));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
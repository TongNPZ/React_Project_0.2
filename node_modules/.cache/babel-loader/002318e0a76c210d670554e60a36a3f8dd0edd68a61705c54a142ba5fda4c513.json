{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroButton from \"./PDFAcroButton\";\nimport { AcroButtonFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError } from \"../errors\";\nvar PDFAcroRadioButton = /** @class */function (_super) {\n  __extends(PDFAcroRadioButton, _super);\n  function PDFAcroRadioButton() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroRadioButton.prototype.setValue = function (value) {\n    var onValues = this.getOnValues();\n    if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n      throw new InvalidAcroFieldValueError();\n    }\n    this.dict.set(PDFName.of('V'), value);\n    var widgets = this.getWidgets();\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var widget = widgets[idx];\n      var state = widget.getOnValue() === value ? value : PDFName.of('Off');\n      widget.setAppearanceState(state);\n    }\n  };\n  PDFAcroRadioButton.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFName) return v;\n    return PDFName.of('Off');\n  };\n  PDFAcroRadioButton.prototype.getOnValues = function () {\n    var widgets = this.getWidgets();\n    var onValues = [];\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var onValue = widgets[idx].getOnValue();\n      if (onValue) onValues.push(onValue);\n    }\n    return onValues;\n  };\n  PDFAcroRadioButton.fromDict = function (dict, ref) {\n    return new PDFAcroRadioButton(dict, ref);\n  };\n  PDFAcroRadioButton.create = function (context) {\n    var dict = context.obj({\n      FT: 'Btn',\n      Ff: AcroButtonFlags.Radio,\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroRadioButton(dict, ref);\n  };\n  return PDFAcroRadioButton;\n}(PDFAcroButton);\nexport default PDFAcroRadioButton;","map":{"version":3,"names":["PDFName","PDFAcroButton","AcroButtonFlags","InvalidAcroFieldValueError","PDFAcroRadioButton","_super","__extends","prototype","setValue","value","onValues","getOnValues","includes","of","dict","set","widgets","getWidgets","idx","len","length","widget","state","getOnValue","setAppearanceState","getValue","v","V","onValue","push","fromDict","ref","create","context","obj","FT","Ff","Radio","Kids","register"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0\\node_modules\\pdf-lib\\src\\core\\acroform\\PDFAcroRadioButton.ts"],"sourcesContent":["import PDFRef from 'src/core/objects/PDFRef';\nimport PDFDict from 'src/core/objects/PDFDict';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFAcroButton from 'src/core/acroform/PDFAcroButton';\nimport PDFContext from 'src/core/PDFContext';\nimport { AcroButtonFlags } from 'src/core/acroform/flags';\nimport { InvalidAcroFieldValueError } from 'src/core/errors';\n\nclass PDFAcroRadioButton extends PDFAcroButton {\n  static fromDict = (dict: PDFDict, ref: PDFRef) =>\n    new PDFAcroRadioButton(dict, ref);\n\n  static create = (context: PDFContext) => {\n    const dict = context.obj({\n      FT: 'Btn',\n      Ff: AcroButtonFlags.Radio,\n      Kids: [],\n    });\n    const ref = context.register(dict);\n    return new PDFAcroRadioButton(dict, ref);\n  };\n\n  setValue(value: PDFName) {\n    const onValues = this.getOnValues();\n    if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n      throw new InvalidAcroFieldValueError();\n    }\n\n    this.dict.set(PDFName.of('V'), value);\n\n    const widgets = this.getWidgets();\n    for (let idx = 0, len = widgets.length; idx < len; idx++) {\n      const widget = widgets[idx];\n      const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n      widget.setAppearanceState(state);\n    }\n  }\n\n  getValue(): PDFName {\n    const v = this.V();\n    if (v instanceof PDFName) return v;\n    return PDFName.of('Off');\n  }\n\n  getOnValues(): PDFName[] {\n    const widgets = this.getWidgets();\n\n    const onValues: PDFName[] = [];\n    for (let idx = 0, len = widgets.length; idx < len; idx++) {\n      const onValue = widgets[idx].getOnValue();\n      if (onValue) onValues.push(onValue);\n    }\n\n    return onValues;\n  }\n}\n\nexport default PDFAcroRadioButton;\n"],"mappings":";AAEA,OAAOA,OAAO;AACd,OAAOC,aAAa;AAEpB,SAASC,eAAe,QAAE;AAC1B,SAASC,0BAA0B,QAAE;AAErC,IAAAC,kBAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,kBAAA,EAAAC,MAAA;EAAjC,SAAAD,mBAAA;;EA+CA;EAjCEA,kBAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,KAAc;IACrB,IAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,EAAE;IACnC,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAKT,OAAO,CAACa,EAAE,CAAC,KAAK,CAAC,EAAE;MAC5D,MAAM,IAAIV,0BAA0B,EAAE;;IAGxC,IAAI,CAACW,IAAI,CAACC,GAAG,CAACf,OAAO,CAACa,EAAE,CAAC,GAAG,CAAC,EAAEJ,KAAK,CAAC;IAErC,IAAMO,OAAO,GAAG,IAAI,CAACC,UAAU,EAAE;IACjC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGH,OAAO,CAACI,MAAM,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MACxD,IAAMG,MAAM,GAAGL,OAAO,CAACE,GAAG,CAAC;MAC3B,IAAMI,KAAK,GAAGD,MAAM,CAACE,UAAU,EAAE,KAAKd,KAAK,GAAGA,KAAK,GAAGT,OAAO,CAACa,EAAE,CAAC,KAAK,CAAC;MACvEQ,MAAM,CAACG,kBAAkB,CAACF,KAAK,CAAC;;EAEpC,CAAC;EAEDlB,kBAAA,CAAAG,SAAA,CAAAkB,QAAQ,GAAR;IACE,IAAMC,CAAC,GAAG,IAAI,CAACC,CAAC,EAAE;IAClB,IAAID,CAAC,YAAY1B,OAAO,EAAE,OAAO0B,CAAC;IAClC,OAAO1B,OAAO,CAACa,EAAE,CAAC,KAAK,CAAC;EAC1B,CAAC;EAEDT,kBAAA,CAAAG,SAAA,CAAAI,WAAW,GAAX;IACE,IAAMK,OAAO,GAAG,IAAI,CAACC,UAAU,EAAE;IAEjC,IAAMP,QAAQ,GAAc,EAAE;IAC9B,KAAK,IAAIQ,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGH,OAAO,CAACI,MAAM,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MACxD,IAAMU,OAAO,GAAGZ,OAAO,CAACE,GAAG,CAAC,CAACK,UAAU,EAAE;MACzC,IAAIK,OAAO,EAAElB,QAAQ,CAACmB,IAAI,CAACD,OAAO,CAAC;;IAGrC,OAAOlB,QAAQ;EACjB,CAAC;EA7CMN,kBAAA,CAAA0B,QAAQ,GAAG,UAAChB,IAAa,EAAEiB,GAAW;IAC3C,WAAI3B,kBAAkB,CAACU,IAAI,EAAEiB,GAAG,CAAC;EAAjC,CAAiC;EAE5B3B,kBAAA,CAAA4B,MAAM,GAAG,UAACC,OAAmB;IAClC,IAAMnB,IAAI,GAAGmB,OAAO,CAACC,GAAG,CAAC;MACvBC,EAAE,EAAE,KAAK;MACTC,EAAE,EAAElC,eAAe,CAACmC,KAAK;MACzBC,IAAI,EAAE;KACP,CAAC;IACF,IAAMP,GAAG,GAAGE,OAAO,CAACM,QAAQ,CAACzB,IAAI,CAAC;IAClC,OAAO,IAAIV,kBAAkB,CAACU,IAAI,EAAEiB,GAAG,CAAC;EAC1C,CAAC;EAmCH,OAAA3B,kBAAC;CAAA,CA/CgCH,aAAa;AAiD9C,eAAeG,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import CharCodes from \"../syntax/CharCodes\";\nvar PDFTrailerDict = /** @class */function () {\n  function PDFTrailerDict(dict) {\n    this.dict = dict;\n  }\n  PDFTrailerDict.prototype.toString = function () {\n    return \"trailer\\n\" + this.dict.toString();\n  };\n  PDFTrailerDict.prototype.sizeInBytes = function () {\n    return 8 + this.dict.sizeInBytes();\n  };\n  PDFTrailerDict.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.i;\n    buffer[offset++] = CharCodes.l;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.Newline;\n    offset += this.dict.copyBytesInto(buffer, offset);\n    return offset - initialOffset;\n  };\n  PDFTrailerDict.of = function (dict) {\n    return new PDFTrailerDict(dict);\n  };\n  return PDFTrailerDict;\n}();\nexport default PDFTrailerDict;","map":{"version":3,"names":["CharCodes","PDFTrailerDict","dict","prototype","toString","sizeInBytes","copyBytesInto","buffer","offset","initialOffset","t","r","a","i","l","e","Newline","of"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0\\node_modules\\pdf-lib\\src\\core\\document\\PDFTrailerDict.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\nimport CharCodes from 'src/core/syntax/CharCodes';\n\nclass PDFTrailerDict {\n  static of = (dict: PDFDict) => new PDFTrailerDict(dict);\n\n  readonly dict: PDFDict;\n\n  private constructor(dict: PDFDict) {\n    this.dict = dict;\n  }\n\n  toString(): string {\n    return `trailer\\n${this.dict.toString()}`;\n  }\n\n  sizeInBytes(): number {\n    return 8 + this.dict.sizeInBytes();\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const initialOffset = offset;\n\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.i;\n    buffer[offset++] = CharCodes.l;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.Newline;\n\n    offset += this.dict.copyBytesInto(buffer, offset);\n\n    return offset - initialOffset;\n  }\n}\n\nexport default PDFTrailerDict;\n"],"mappings":"AACA,OAAOA,SAAS;AAEhB,IAAAC,cAAA;EAKE,SAAAA,eAAoBC,IAAa;IAC/B,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAD,cAAA,CAAAE,SAAA,CAAAC,QAAQ,GAAR;IACE,OAAO,cAAY,IAAI,CAACF,IAAI,CAACE,QAAQ,EAAI;EAC3C,CAAC;EAEDH,cAAA,CAAAE,SAAA,CAAAE,WAAW,GAAX;IACE,OAAO,CAAC,GAAG,IAAI,CAACH,IAAI,CAACG,WAAW,EAAE;EACpC,CAAC;EAEDJ,cAAA,CAAAE,SAAA,CAAAG,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9C,IAAMC,aAAa,GAAGD,MAAM;IAE5BD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACU,CAAC;IAC9BH,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACW,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACY,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACa,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACc,CAAC;IAC9BP,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACe,CAAC;IAC9BR,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACW,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGR,SAAS,CAACgB,OAAO;IAEpCR,MAAM,IAAI,IAAI,CAACN,IAAI,CAACI,aAAa,CAACC,MAAM,EAAEC,MAAM,CAAC;IAEjD,OAAOA,MAAM,GAAGC,aAAa;EAC/B,CAAC;EA/BMR,cAAA,CAAAgB,EAAE,GAAG,UAACf,IAAa;IAAK,WAAID,cAAc,CAACC,IAAI,CAAC;EAAxB,CAAwB;EAgCzD,OAAAD,cAAC;CAAA,CAjCD;AAmCA,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TongNPZ\\\\Desktop\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React from 'react';\nimport './Login.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = porps => {\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://26.90.237.200:3000/login', {\n        // Include any necessary login credentials\n        username: 'admin',\n        password: 'admin'\n      });\n      console.log(response);\n      // Extract the token from the response\n      const {\n        token\n      } = response.data;\n\n      // Save the token in your application state or localStorage\n      // For example, if you're using React state:\n\n      // or if you're using localStorage:\n      localStorage.setItem('token', token);\n\n      // Perform any additional actions, such as redirecting the user\n    } catch (error) {\n      // Handle error responses\n      console.error('Login error:', error);\n    }\n  };\n  const api = axios.create({\n    baseURL: 'http://26.90.237.200:3000/authen',\n    // Set your API base URL\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // Add an interceptor to include the token in the request headers\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Now you can use the `api` instance to make authenticated requests\n  api.get('/protected-endpoint').then(response => {\n    // Handle the response from the protected endpoint\n  }).catch(error => {\n    // Handle any error responses\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  //   return (\n  //   <div>\n  //   <form action=\"\" id=\"login\" method=\"post\">\n  //     <h1>Login</h1>\n  //     <p className=\"item\">\n  //       <label for=\"username\"> Username </label>\n  //       <input type=\"username\" name=\"username\" id=\"username\" />\n  //     </p>\n  //     <p className=\"item\">\n  //       <label for=\"password\"> Password </label>\n  //       <input type=\"password\" name=\"password\" id=\"password\" />\n  //     </p>\n  //     <p className=\"item\">\n  //       <input type=\"submit\" value=\"Login\" />\n  //     </p>\n  //   </form>\n  // </div>\n  //   );\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Login","porps","handleLogin","response","post","username","password","console","log","token","data","localStorage","setItem","error","api","create","baseURL","headers","interceptors","request","use","config","getItem","Authorization","Promise","reject","get","then","catch","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TongNPZ/Desktop/my-app/src/components/Login/Login.js"],"sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\nimport { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = (porps) => {\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://26.90.237.200:3000/login', {\r\n        // Include any necessary login credentials\r\n        username: 'admin',\r\n        password: 'admin',\r\n        \r\n      });\r\n      \r\n      console.log(response)\r\n      // Extract the token from the response\r\n      const { token } = response.data;\r\n  \r\n      // Save the token in your application state or localStorage\r\n      // For example, if you're using React state:\r\n   \r\n      // or if you're using localStorage:\r\n      localStorage.setItem('token', token);\r\n  \r\n      // Perform any additional actions, such as redirecting the user\r\n    } catch (error) {\r\n      // Handle error responses\r\n      console.error('Login error:', error);\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  const api = axios.create({\r\n    baseURL: 'http://26.90.237.200:3000/authen', // Set your API base URL\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  \r\n  // Add an interceptor to include the token in the request headers\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem('token');\r\n  \r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n  \r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n  \r\n  // Now you can use the `api` instance to make authenticated requests\r\n  api.get('/protected-endpoint')\r\n    .then((response) => {\r\n      // Handle the response from the protected endpoint\r\n    })\r\n    .catch((error) => {\r\n      // Handle any error responses\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  )\r\n\r\n  //   return (\r\n  //   <div>\r\n  //   <form action=\"\" id=\"login\" method=\"post\">\r\n  //     <h1>Login</h1>\r\n  //     <p className=\"item\">\r\n  //       <label for=\"username\"> Username </label>\r\n  //       <input type=\"username\" name=\"username\" id=\"username\" />\r\n  //     </p>\r\n  //     <p className=\"item\">\r\n  //       <label for=\"password\"> Password </label>\r\n  //       <input type=\"password\" name=\"password\" id=\"password\" />\r\n  //     </p>\r\n  //     <p className=\"item\">\r\n  //       <input type=\"submit\" value=\"Login\" />\r\n  //     </p>\r\n  //   </form>\r\n  // </div>\r\n  //   );\r\n  };\r\n\r\n  export default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAEvB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,iCAAiC,EAAE;QACnE;QACAC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE;MAEZ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrB;MACA,MAAM;QAAEM;MAAM,CAAC,GAAGN,QAAQ,CAACO,IAAI;;MAE/B;MACA;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;;MAEpC;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACAN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IAEtC;EAEF,CAAC;EAED,MAAMC,GAAG,GAAGjB,KAAK,CAACkB,MAAM,CAAC;IACvBC,OAAO,EAAE,kCAAkC;IAAE;IAC7CC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;EACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACV,MAAMZ,KAAK,GAAGE,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIb,KAAK,EAAE;MACTY,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAI,UAASd,KAAM,EAAC;IAClD;IAEA,OAAOY,MAAM;EACf,CAAC,EACAR,KAAK,IAAK;IACT,OAAOW,OAAO,CAACC,MAAM,CAACZ,KAAK,CAAC;EAC9B,CACF,CAAC;;EAED;EACAC,GAAG,CAACY,GAAG,CAAC,qBAAqB,CAAC,CAC3BC,IAAI,CAAExB,QAAQ,IAAK;IAClB;EAAA,CACD,CAAC,CACDyB,KAAK,CAAEf,KAAK,IAAK;IAChB;EAAA,CACD,CAAC;EAEJ,oBACEd,OAAA;IAAA8B,QAAA,eACE9B,OAAA;MAAQ+B,OAAO,EAAE5B,WAAY;MAAA2B,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAACC,EAAA,GAtFEnC,KAAK;AAwFT,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
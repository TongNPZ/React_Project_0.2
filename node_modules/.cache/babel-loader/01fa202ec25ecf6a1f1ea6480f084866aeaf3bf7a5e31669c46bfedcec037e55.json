{"ast":null,"code":"import PDFDict from \"../objects/PDFDict\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFRef from \"../objects/PDFRef\";\nimport { findLastMatch } from \"../../utils\";\nimport { MissingDAEntryError, MissingTfOperatorError } from \"../errors\";\n// Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar PDFAcroField = /** @class */function () {\n  function PDFAcroField(dict, ref) {\n    this.dict = dict;\n    this.ref = ref;\n  }\n  PDFAcroField.prototype.T = function () {\n    return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n  };\n  PDFAcroField.prototype.Ff = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n    return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n  PDFAcroField.prototype.V = function () {\n    var valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n    return this.dict.context.lookup(valueOrRef);\n  };\n  PDFAcroField.prototype.Kids = function () {\n    return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n  };\n  // Parent(): PDFDict | undefined {\n  //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n  // }\n  PDFAcroField.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n  PDFAcroField.prototype.setKids = function (kids) {\n    this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n  };\n  PDFAcroField.prototype.getParent = function () {\n    // const parent = this.Parent();\n    // if (!parent) return undefined;\n    // return new PDFAcroField(parent);\n    var parentRef = this.dict.get(PDFName.of('Parent'));\n    if (parentRef instanceof PDFRef) {\n      var parent_1 = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n      return new PDFAcroField(parent_1, parentRef);\n    }\n    return undefined;\n  };\n  PDFAcroField.prototype.setParent = function (parent) {\n    if (!parent) this.dict.delete(PDFName.of('Parent'));else this.dict.set(PDFName.of('Parent'), parent);\n  };\n  PDFAcroField.prototype.getFullyQualifiedName = function () {\n    var parent = this.getParent();\n    if (!parent) return this.getPartialName();\n    return parent.getFullyQualifiedName() + \".\" + this.getPartialName();\n  };\n  PDFAcroField.prototype.getPartialName = function () {\n    var _a;\n    return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();\n  };\n  PDFAcroField.prototype.setPartialName = function (partialName) {\n    if (!partialName) this.dict.delete(PDFName.of('T'));else this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n  };\n  PDFAcroField.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n  PDFAcroField.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n  PDFAcroField.prototype.setFontSize = function (fontSize) {\n    var _a;\n    var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : '';\n    var da = this.getDefaultAppearance();\n    if (!da) throw new MissingDAEntryError(name);\n    var daMatch = findLastMatch(da, tfRegex);\n    if (!daMatch.match) throw new MissingTfOperatorError(name);\n    var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n    var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n    var fontName = daMatch.match[1];\n    var modifiedDa = daStart + \" /\" + fontName + \" \" + fontSize + \" Tf \" + daEnd;\n    this.setDefaultAppearance(modifiedDa);\n  };\n  PDFAcroField.prototype.getFlags = function () {\n    var _a, _b;\n    return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;\n  };\n  PDFAcroField.prototype.setFlags = function (flags) {\n    this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n  };\n  PDFAcroField.prototype.hasFlag = function (flag) {\n    var flags = this.getFlags();\n    return (flags & flag) !== 0;\n  };\n  PDFAcroField.prototype.setFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags | flag);\n  };\n  PDFAcroField.prototype.clearFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags & ~flag);\n  };\n  PDFAcroField.prototype.setFlagTo = function (flag, enable) {\n    if (enable) this.setFlag(flag);else this.clearFlag(flag);\n  };\n  PDFAcroField.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.dict.get(name);\n    });\n    return attribute;\n  };\n  PDFAcroField.prototype.ascend = function (visitor) {\n    visitor(this);\n    var parent = this.getParent();\n    if (parent) parent.ascend(visitor);\n  };\n  return PDFAcroField;\n}();\nexport default PDFAcroField;","map":{"version":3,"names":["PDFDict","PDFString","PDFHexString","PDFName","PDFNumber","PDFArray","PDFRef","findLastMatch","MissingDAEntryError","MissingTfOperatorError","tfRegex","PDFAcroField","dict","ref","prototype","T","lookupMaybe","of","Ff","numberOrRef","getInheritableAttribute","context","V","valueOrRef","lookup","Kids","DA","da","undefined","setKids","kids","set","obj","getParent","parentRef","get","parent_1","setParent","parent","delete","getFullyQualifiedName","getPartialName","_a","decodeText","setPartialName","partialName","fromText","setDefaultAppearance","appearance","getDefaultAppearance","asString","setFontSize","fontSize","name","daMatch","match","daStart","slice","pos","length","daEnd","fontName","modifiedDa","getFlags","_b","asNumber","setFlags","flags","hasFlag","flag","setFlag","clearFlag","setFlagTo","enable","attribute","ascend","node","visitor"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0\\node_modules\\pdf-lib\\src\\core\\acroform\\PDFAcroField.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\nimport PDFString from 'src/core/objects/PDFString';\nimport PDFHexString from 'src/core/objects/PDFHexString';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFObject from 'src/core/objects/PDFObject';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFArray from 'src/core/objects/PDFArray';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport { findLastMatch } from 'src/utils';\nimport { MissingDAEntryError, MissingTfOperatorError } from 'src/core/errors';\n\n// Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\nconst tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\n\nclass PDFAcroField {\n  readonly dict: PDFDict;\n  readonly ref: PDFRef;\n\n  protected constructor(dict: PDFDict, ref: PDFRef) {\n    this.dict = dict;\n    this.ref = ref;\n  }\n\n  T(): PDFString | PDFHexString | undefined {\n    return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n  }\n\n  Ff(): PDFNumber | undefined {\n    const numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n    return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n  }\n\n  V(): PDFObject | undefined {\n    const valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n    return this.dict.context.lookup(valueOrRef);\n  }\n\n  Kids(): PDFArray | undefined {\n    return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n  }\n\n  // Parent(): PDFDict | undefined {\n  //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n  // }\n\n  DA(): PDFString | PDFHexString | undefined {\n    const da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  }\n\n  setKids(kids: PDFObject[]) {\n    this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n  }\n\n  getParent(): PDFAcroField | undefined {\n    // const parent = this.Parent();\n    // if (!parent) return undefined;\n    // return new PDFAcroField(parent);\n\n    const parentRef = this.dict.get(PDFName.of('Parent'));\n    if (parentRef instanceof PDFRef) {\n      const parent = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n      return new PDFAcroField(parent, parentRef);\n    }\n\n    return undefined;\n  }\n\n  setParent(parent: PDFRef | undefined) {\n    if (!parent) this.dict.delete(PDFName.of('Parent'));\n    else this.dict.set(PDFName.of('Parent'), parent);\n  }\n\n  getFullyQualifiedName(): string | undefined {\n    const parent = this.getParent();\n    if (!parent) return this.getPartialName();\n    return `${parent.getFullyQualifiedName()}.${this.getPartialName()}`;\n  }\n\n  getPartialName(): string | undefined {\n    return this.T()?.decodeText();\n  }\n\n  setPartialName(partialName: string | undefined) {\n    if (!partialName) this.dict.delete(PDFName.of('T'));\n    else this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n  }\n\n  setDefaultAppearance(appearance: string) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  }\n\n  getDefaultAppearance(): string | undefined {\n    const DA = this.DA();\n\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n\n    return DA?.asString();\n  }\n\n  setFontSize(fontSize: number) {\n    const name = this.getFullyQualifiedName() ?? '';\n\n    const da = this.getDefaultAppearance();\n    if (!da) throw new MissingDAEntryError(name);\n\n    const daMatch = findLastMatch(da, tfRegex);\n    if (!daMatch.match) throw new MissingTfOperatorError(name);\n\n    const daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n    const daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n    const fontName = daMatch.match[1];\n    const modifiedDa = `${daStart} /${fontName} ${fontSize} Tf ${daEnd}`;\n\n    this.setDefaultAppearance(modifiedDa);\n  }\n\n  getFlags(): number {\n    return this.Ff()?.asNumber() ?? 0;\n  }\n\n  setFlags(flags: number) {\n    this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n  }\n\n  hasFlag(flag: number): boolean {\n    const flags = this.getFlags();\n    return (flags & flag) !== 0;\n  }\n\n  setFlag(flag: number) {\n    const flags = this.getFlags();\n    this.setFlags(flags | flag);\n  }\n\n  clearFlag(flag: number) {\n    const flags = this.getFlags();\n    this.setFlags(flags & ~flag);\n  }\n\n  setFlagTo(flag: number, enable: boolean) {\n    if (enable) this.setFlag(flag);\n    else this.clearFlag(flag);\n  }\n\n  getInheritableAttribute(name: PDFName): PDFObject | undefined {\n    let attribute: PDFObject | undefined;\n    this.ascend((node) => {\n      if (!attribute) attribute = node.dict.get(name);\n    });\n    return attribute;\n  }\n\n  ascend(visitor: (node: PDFAcroField) => any): void {\n    visitor(this);\n    const parent = this.getParent();\n    if (parent) parent.ascend(visitor);\n  }\n}\n\nexport default PDFAcroField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
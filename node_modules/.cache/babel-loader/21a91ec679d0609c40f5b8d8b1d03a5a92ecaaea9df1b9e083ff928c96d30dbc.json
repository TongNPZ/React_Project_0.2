{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport BorderStyle from \"./BorderStyle\";\nimport PDFAnnotation from \"./PDFAnnotation\";\nimport AppearanceCharacteristics from \"./AppearanceCharacteristics\";\nvar PDFWidgetAnnotation = /** @class */function (_super) {\n  __extends(PDFWidgetAnnotation, _super);\n  function PDFWidgetAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFWidgetAnnotation.prototype.MK = function () {\n    var MK = this.dict.lookup(PDFName.of('MK'));\n    if (MK instanceof PDFDict) return MK;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.BS = function () {\n    var BS = this.dict.lookup(PDFName.of('BS'));\n    if (BS instanceof PDFDict) return BS;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.P = function () {\n    var P = this.dict.get(PDFName.of('P'));\n    if (P instanceof PDFRef) return P;\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.setP = function (page) {\n    this.dict.set(PDFName.of('P'), page);\n  };\n  PDFWidgetAnnotation.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n  PDFWidgetAnnotation.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n  PDFWidgetAnnotation.prototype.getAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.getOrCreateAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    var ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('MK'), ac.dict);\n    return ac;\n  };\n  PDFWidgetAnnotation.prototype.getBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    return undefined;\n  };\n  PDFWidgetAnnotation.prototype.getOrCreateBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    var bs = BorderStyle.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('BS'), bs.dict);\n    return bs;\n  };\n  PDFWidgetAnnotation.prototype.getOnValue = function () {\n    var _a;\n    var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;\n    if (normal instanceof PDFDict) {\n      var keys = normal.keys();\n      for (var idx = 0, len = keys.length; idx < len; idx++) {\n        var key = keys[idx];\n        if (key !== PDFName.of('Off')) return key;\n      }\n    }\n    return undefined;\n  };\n  PDFWidgetAnnotation.fromDict = function (dict) {\n    return new PDFWidgetAnnotation(dict);\n  };\n  PDFWidgetAnnotation.create = function (context, parent) {\n    var dict = context.obj({\n      Type: 'Annot',\n      Subtype: 'Widget',\n      Rect: [0, 0, 0, 0],\n      Parent: parent\n    });\n    return new PDFWidgetAnnotation(dict);\n  };\n  return PDFWidgetAnnotation;\n}(PDFAnnotation);\nexport default PDFWidgetAnnotation;","map":{"version":3,"names":["PDFDict","PDFName","PDFRef","PDFString","PDFHexString","BorderStyle","PDFAnnotation","AppearanceCharacteristics","PDFWidgetAnnotation","_super","__extends","prototype","MK","dict","lookup","of","undefined","BS","DA","da","P","get","setP","page","set","setDefaultAppearance","appearance","getDefaultAppearance","decodeText","asString","getAppearanceCharacteristics","fromDict","getOrCreateAppearanceCharacteristics","ac","context","obj","getBorderStyle","getOrCreateBorderStyle","bs","getOnValue","normal","_a","getAppearances","keys","idx","len","length","key","create","parent","Type","Subtype","Rect","Parent"],"sources":["C:\\Users\\TongNPZ\\Desktop\\my-app-2.0 - Copy (2)\\node_modules\\pdf-lib\\src\\core\\annotation\\PDFWidgetAnnotation.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFName from 'src/core/objects/PDFName';\r\nimport PDFRef from 'src/core/objects/PDFRef';\r\nimport PDFString from 'src/core/objects/PDFString';\r\nimport PDFHexString from 'src/core/objects/PDFHexString';\r\nimport PDFContext from 'src/core/PDFContext';\r\nimport BorderStyle from 'src/core/annotation/BorderStyle';\r\nimport PDFAnnotation from 'src/core/annotation/PDFAnnotation';\r\nimport AppearanceCharacteristics from 'src/core/annotation/AppearanceCharacteristics';\r\n\r\nclass PDFWidgetAnnotation extends PDFAnnotation {\r\n  static fromDict = (dict: PDFDict): PDFWidgetAnnotation =>\r\n    new PDFWidgetAnnotation(dict);\r\n\r\n  static create = (context: PDFContext, parent: PDFRef) => {\r\n    const dict = context.obj({\r\n      Type: 'Annot',\r\n      Subtype: 'Widget',\r\n      Rect: [0, 0, 0, 0],\r\n      Parent: parent,\r\n    });\r\n    return new PDFWidgetAnnotation(dict);\r\n  };\r\n\r\n  MK(): PDFDict | undefined {\r\n    const MK = this.dict.lookup(PDFName.of('MK'));\r\n    if (MK instanceof PDFDict) return MK;\r\n    return undefined;\r\n  }\r\n\r\n  BS(): PDFDict | undefined {\r\n    const BS = this.dict.lookup(PDFName.of('BS'));\r\n    if (BS instanceof PDFDict) return BS;\r\n    return undefined;\r\n  }\r\n\r\n  DA(): PDFString | PDFHexString | undefined {\r\n    const da = this.dict.lookup(PDFName.of('DA'));\r\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\r\n    return undefined;\r\n  }\r\n\r\n  P(): PDFRef | undefined {\r\n    const P = this.dict.get(PDFName.of('P'));\r\n    if (P instanceof PDFRef) return P;\r\n    return undefined;\r\n  }\r\n\r\n  setP(page: PDFRef) {\r\n    this.dict.set(PDFName.of('P'), page);\r\n  }\r\n\r\n  setDefaultAppearance(appearance: string) {\r\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\r\n  }\r\n\r\n  getDefaultAppearance(): string | undefined {\r\n    const DA = this.DA();\r\n\r\n    if (DA instanceof PDFHexString) {\r\n      return DA.decodeText();\r\n    }\r\n\r\n    return DA?.asString();\r\n  }\r\n\r\n  getAppearanceCharacteristics(): AppearanceCharacteristics | undefined {\r\n    const MK = this.MK();\r\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\r\n    return undefined;\r\n  }\r\n\r\n  getOrCreateAppearanceCharacteristics(): AppearanceCharacteristics {\r\n    const MK = this.MK();\r\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\r\n\r\n    const ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\r\n    this.dict.set(PDFName.of('MK'), ac.dict);\r\n    return ac;\r\n  }\r\n\r\n  getBorderStyle(): BorderStyle | undefined {\r\n    const BS = this.BS();\r\n    if (BS) return BorderStyle.fromDict(BS);\r\n    return undefined;\r\n  }\r\n\r\n  getOrCreateBorderStyle(): BorderStyle {\r\n    const BS = this.BS();\r\n    if (BS) return BorderStyle.fromDict(BS);\r\n\r\n    const bs = BorderStyle.fromDict(this.dict.context.obj({}));\r\n    this.dict.set(PDFName.of('BS'), bs.dict);\r\n    return bs;\r\n  }\r\n\r\n  getOnValue(): PDFName | undefined {\r\n    const normal = this.getAppearances()?.normal;\r\n\r\n    if (normal instanceof PDFDict) {\r\n      const keys = normal.keys();\r\n      for (let idx = 0, len = keys.length; idx < len; idx++) {\r\n        const key = keys[idx];\r\n        if (key !== PDFName.of('Off')) return key;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default PDFWidgetAnnotation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}